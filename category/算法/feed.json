{
    "version": "https://jsonfeed.org/version/1",
    "title": "jQueryZK Blog • All posts by \"算法\" category",
    "description": "过去无法挽回，未来可以改变",
    "home_page_url": "http://yoursite.com",
    "items": [
        {
            "id": "http://yoursite.com/2020/08/23/%E7%BA%A6%E7%91%9F%E5%A4%AB/",
            "url": "http://yoursite.com/2020/08/23/%E7%BA%A6%E7%91%9F%E5%A4%AB/",
            "title": "算法（Java实现）-图解Josephu（约瑟夫）问题",
            "date_published": "2020-08-23T11:06:38.687Z",
            "content_html": "<h1 id=\"1-josephu约瑟夫\"><a class=\"markdownIt-Anchor\" href=\"#1-josephu约瑟夫\">#</a> 1、Josephu (约瑟夫）</h1>\n<p>问题描述：设编号为 1,2,3，，，，n 的 n 个人围坐一圈，约定编号为 k（1&lt;=k&lt;=n）的人从 1 开始报数，数到 m 的那个人出列，它的下一位又从 1 开始报数，数到 m 的那个人又出列，依次类推，直到所有人出列为止，由此产生一个出队编号的序列，和最后剩下的那个人。求这个序列和最后那个人的编号。<br>\n整体解题思路：<strong>用一个不带头节点的单向环形链表来处理该问题。</strong></p>\n<ol>\n<li>先构成一个有 n 个结点的单向环形链表</li>\n<li>由 k 结点起从 1 开始计数，计到 m 时，对应结点从链表中删除</li>\n<li>被删除的下一个节点又从 1 开始计数，直到最后一个节点从链表中删除</li>\n</ol>\n<h1 id=\"2-构建单向循环链表\"><a class=\"markdownIt-Anchor\" href=\"#2-构建单向循环链表\">#</a> 2、构建单向循环链表</h1>\n<h2 id=\"21单向环形链表示意图\"><a class=\"markdownIt-Anchor\" href=\"#21单向环形链表示意图\">#</a> 2.1 单向环形链表示意图：</h2>\n<p><img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200815153341468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n假设：</p>\n<ul>\n<li>n=5，即有五个人</li>\n<li>k=1，从编号为 1 的人开始报数</li>\n<li>m=2，数两个数出一个人<br>\n预期结果：<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200815153624808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<h2 id=\"22具体构建单向环形链表过程\"><a class=\"markdownIt-Anchor\" href=\"#22具体构建单向环形链表过程\">#</a> 2.2 具体构建单向环形链表过程</h2>\n<p>1、先创建第一个节点，让 first 指向该结点，该节点 next 指向自己形成环<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200815153939531.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n 2、创建一个指向 first 的辅助变量 curBoy 帮助构建环形链表，创建新节点 boy 使 curBoy.next 先指向 boy（即与新节点相连）<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/2020081515442095.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n 3、boy.next 指向 first 使这两个节点构成环，curBoy 辅助变量向后移动到新的节点上<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200815154611240.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n 4、依次类推后面的节点也是这样操作<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200815154654333.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"23遍历环形链表\"><a class=\"markdownIt-Anchor\" href=\"#23遍历环形链表\">#</a> 2.3 遍历环形链表</h2>\n<ol>\n<li>先让一个辅助变量 curBoy，指向 first 节点</li>\n<li>然后通过 while 循环遍历该环形链表即可 curBoy.next==first 结束</li>\n</ol>\n<h2 id=\"24出圈思路分析\"><a class=\"markdownIt-Anchor\" href=\"#24出圈思路分析\">#</a> 2.4 出圈思路分析</h2>\n<p>1、需要创建一个辅助指针（变量）helper，事先应该指向环形链表的最后一个节点<br>\n（小孩报数前，先让 first 和 helper 移动 k-1 次，确保 first 是指向第一个报数的孩子（图示里一个报数的孩子是 1 号））<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200815155403754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n 2、当孩子报数时，让 first 和 helper 指针同时的移动 m-1 次（图示中数两个数出一个人即 m=2）<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200815155537506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n 3、这时可以将 first 指向的小孩节点出圈 first = first.next ; helper.next = first; 原来 first 指向的节点就没有任何引用，就会被垃圾机制回收<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200815155809910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"3-代码实现\"><a class=\"markdownIt-Anchor\" href=\"#3-代码实现\">#</a> 3、代码实现</h1>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhukun.LinkList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建一个Boy类，表示一个节点</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Boy</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> no;<span class=\"comment\">//编号</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Boy next;<span class=\"comment\">//指向下一个节点，默认为null</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Boy</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span><span class=\"comment\">//构造函数</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.no = no;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//进行封装</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getNo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> no;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNo</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.no = no;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Boy <span class=\"title\">getNext</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNext</span><span class=\"params\">(Boy next)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.next = next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//创建一个环形的单向链表</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CircleSingleLinkedList</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//创建一个first节点，当前没有编号</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Boy first = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t<span class=\"comment\">//添加小孩节点，构建成一个环形链表</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addBoy</span><span class=\"params\">(<span class=\"keyword\">int</span> nums)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//先对nums进行数据校验</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(nums &lt; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;nums的值不正确&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tBoy curBoy =<span class=\"keyword\">null</span>; <span class=\"comment\">//因为first指针不能动，让curBoy辅助变量帮助构建环形链表</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//使用for循环来构建环形链表</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=nums;i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//根据编号，创建小孩节点</span></span><br><span class=\"line\">\t\t\tBoy boy = <span class=\"keyword\">new</span> Boy(i);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//如果第一个小孩，先自己跟自己构成环</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tfirst = boy;</span><br><span class=\"line\">\t\t\t\tfirst.setNext(first);<span class=\"comment\">//构成环</span></span><br><span class=\"line\">\t\t\t\tcurBoy = first;<span class=\"comment\">//让辅助变量curBoy指向第一个小孩</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tcurBoy.setNext(boy);<span class=\"comment\">//curBoy指向新生成的boy节点，先让后一个节点与前一个节点相连</span></span><br><span class=\"line\">\t\t\t\tboy.setNext(first);<span class=\"comment\">//新生成的boy节点指向first，重新构成环</span></span><br><span class=\"line\">\t\t\t\tcurBoy = boy;<span class=\"comment\">//curBoy向后移动移动到新生成的boy节点上</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//遍历当前的环形</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showBoy</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//判断链表是否为空</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(first == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;没有任何小孩&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//因为first不能动，因此我们仍然使用一个辅助指针完成遍历</span></span><br><span class=\"line\">\t\tBoy curBoy = first;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;小孩的编号:&quot;</span>+curBoy.getNo());</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(curBoy.getNext() == first) <span class=\"comment\">//说明已经遍历完所有小孩</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tcurBoy = curBoy.getNext();<span class=\"comment\">//辅助变量curBoy遍历完一个往后移动继续向下遍历</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//根据用户的输入，计算小孩出圈的顺序</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//startNo   ：表示从第几个孩子开始数数</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//countNum    ：表示数几下后出一个孩子</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//nums    ：表示最初有多少个孩子在圈子中</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">countBoy</span><span class=\"params\">(<span class=\"keyword\">int</span> startNo,<span class=\"keyword\">int</span> countNum,<span class=\"keyword\">int</span> nums)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//先对输入的数据进行校验</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(first == <span class=\"keyword\">null</span> || startNo&lt;<span class=\"number\">1</span> || startNo&gt;nums)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;参数输入有错误，请重新输入&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//创建一个辅助指针，帮助完成小孩出圈</span></span><br><span class=\"line\">\t\tBoy helper = first;</span><br><span class=\"line\">\t\t<span class=\"comment\">//需要创建一个辅助变量helper事先应该指向环形链表的最后这个节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(helper.getNext() == first)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\thelper = helper.getNext();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//小孩报数前，先让first和helper移动k-1次确保first指向第一个报数的孩子上，而helper指向这种报数顺序下最后一个孩子上</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;startNo-<span class=\"number\">1</span>;j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tfirst = first.getNext();</span><br><span class=\"line\">\t\t\thelper = helper.getNext();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//当小孩报数时，让first和helper指针同时的移动countNum-1次(因为第一个孩子本身要报数所以间隔为countNum-1)，然后出圈</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//这是一个循环操作，直到圈中只有一个节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(helper == first)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;<span class=\"comment\">//说明圈中只有一个节点</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//让first和helper指针同时移动countNum-1</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;countNum-<span class=\"number\">1</span>;j++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tfirst = first.getNext();</span><br><span class=\"line\">\t\t\t\thelper = helper.getNext();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//这时first指向的节点，就是要出圈的小孩节点</span></span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;小孩&quot;</span>+first.getNo()+<span class=\"string\">&quot;出圈&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//这时将first指向的小孩节点出圈</span></span><br><span class=\"line\">\t\t\tfirst = first.getNext();</span><br><span class=\"line\">\t\t\thelper.setNext(first);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;最后留在圈中的小孩编号是：&quot;</span>+first.getNo());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Josephu</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tScanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入一开始的孩子数:&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> a = scanner.nextInt();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入从第几个孩子开始报数：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> b = scanner.nextInt();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请设置数几下后出一个人：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> c =scanner.nextInt();</span><br><span class=\"line\">\t\tCircleSingleLinkedList list = <span class=\"keyword\">new</span> CircleSingleLinkedList();</span><br><span class=\"line\">\t\tlist.addBoy(a);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;原有编号顺序：&quot;</span>);</span><br><span class=\"line\">\t\tlist.showBoy();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;出圈顺序：&quot;</span>);</span><br><span class=\"line\">\t\tlist.countBoy(b, c, a);\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试结果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">请输入一开始的孩子数:</span><br><span class=\"line\"><span class=\"number\">5</span></span><br><span class=\"line\">请输入从第几个孩子开始报数：</span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\">请设置数几下后出一个人：</span><br><span class=\"line\"><span class=\"number\">2</span></span><br><span class=\"line\">原有编号顺序：</span><br><span class=\"line\">小孩的编号:<span class=\"number\">1</span></span><br><span class=\"line\">小孩的编号:<span class=\"number\">2</span></span><br><span class=\"line\">小孩的编号:<span class=\"number\">3</span></span><br><span class=\"line\">小孩的编号:<span class=\"number\">4</span></span><br><span class=\"line\">小孩的编号:<span class=\"number\">5</span></span><br><span class=\"line\">出圈顺序：</span><br><span class=\"line\">小孩<span class=\"number\">2</span>出圈</span><br><span class=\"line\">小孩<span class=\"number\">4</span>出圈</span><br><span class=\"line\">小孩<span class=\"number\">1</span>出圈</span><br><span class=\"line\">小孩<span class=\"number\">5</span>出圈</span><br><span class=\"line\">最后留在圈中的小孩编号是：<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "算法",
                "环形链表",
                "约瑟夫"
            ]
        }
    ]
}