{
    "version": "https://jsonfeed.org/version/1",
    "title": "jQueryZK Blog • All posts by \"循环队列\" tag",
    "description": "过去无法挽回，未来可以改变",
    "home_page_url": "https://jqueryzk.gitee.io/zkblog",
    "items": [
        {
            "id": "https://jqueryzk.gitee.io/zkblog/2020/08/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89-%E8%AF%A6%E8%B0%88%E9%98%9F%E5%88%97/",
            "url": "https://jqueryzk.gitee.io/zkblog/2020/08/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89-%E8%AF%A6%E8%B0%88%E9%98%9F%E5%88%97/",
            "title": "数据结构（Java实现）-详谈队列",
            "date_published": "2020-08-24T13:28:56.885Z",
            "content_html": "<h1 id=\"1-队列介绍\"><a class=\"markdownIt-Anchor\" href=\"#1-队列介绍\">#</a> 1、队列介绍</h1>\n<ul>\n<li>队列是一个有序列表，可以用<strong>数组（顺序存储）</strong> 或是 <strong>链表（链式存储）</strong> 来实现</li>\n<li>遵循先入先出（<strong>从队尾进，队首出</strong>）的原则。即：先存入队列的数据，要先取出，后存入的要后取出。</li>\n</ul>\n<h1 id=\"2-队列的顺序存储数组实现\"><a class=\"markdownIt-Anchor\" href=\"#2-队列的顺序存储数组实现\">#</a> 2、队列的顺序存储（数组实现）</h1>\n<p>队列本身是<strong>有序列表</strong>，若使用数组的结构来存储队列的数据，则队列数组的声明如下图，其中 maxSize 是该队列的最大容量。 因为队列的输出、输入是分别从前后端来处理，因此需要两个<strong>变量 front 及 rear</strong> 分别记录队列<strong>前后端的下标</strong>，front 会随着数据输出而改变，而 rear 则是随着数据输入而改变。</p>\n<p>使用数组模拟队列示意图：<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/2020081020520374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"21队列的相关概念\"><a class=\"markdownIt-Anchor\" href=\"#21队列的相关概念\">#</a> 2.1 队列的相关概念</h2>\n<ol>\n<li>队头与队尾：允许元素插入的一端称为队尾，允许元素删除的一端称为队头。</li>\n<li>入队：队列的插入操作</li>\n<li>出队：队列的删除操作</li>\n</ol>\n<p>下面用两张图来理解入队和出队：<br>\n例如我们有一个存储整型元素的队列，我们依次入队：{1，2，3}：<br>\n添加元素时，元素只能从队尾一端进入队列，也即是 2 只能跟在 1 后面，3 只能跟在 2 后面。<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200810210413281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n如果要出队：元素只能从队首出队列，出队列的顺序为：1、2、3，与入队时的顺序一致，这就是所谓的 “先进先出”。<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200810210601254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"22队列的操作\"><a class=\"markdownIt-Anchor\" href=\"#22队列的操作\">#</a> 2.2 队列的操作</h2>\n<p>队列通常提供的操作：</p>\n<ol>\n<li>入队</li>\n<li>出队</li>\n<li>输出所有队列元素</li>\n<li>获取队首元素</li>\n<li>判断队满或队空</li>\n</ol>\n<h2 id=\"23代码实现\"><a class=\"markdownIt-Anchor\" href=\"#23代码实现\">#</a> 2.3 代码实现</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhukun.ArrayListQueue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用数组模拟队列-编写一个ArrayQueue类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArrayQueue</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> maxSize;<span class=\"comment\">//表示数组的最大容量</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> front;<span class=\"comment\">//队列头</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> rear;<span class=\"comment\">//队列尾</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] arr;<span class=\"comment\">//该数据用于存放数据，模拟队列</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> length=<span class=\"number\">0</span>;<span class=\"comment\">//队列中实际元素的数量</span></span><br><span class=\"line\">\t<span class=\"comment\">//创建队列构造器</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ArrayQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> arrMaxSize)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.maxSize = arrMaxSize;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[maxSize];</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.front = -<span class=\"number\">1</span>;<span class=\"comment\">//指向队列头部，分析出front是指向队列头的前一个位置</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.rear = -<span class=\"number\">1</span>;<span class=\"comment\">//指向队列的尾部，指向队列尾的数据(即就是队列最后一个数据)</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//判断队列是否满</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isFull</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> rear == maxSize-<span class=\"number\">1</span>;<span class=\"comment\">//如果成立则队满，即rear指向容量满足下最后一个数据</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//判断是否为空</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> rear == front;<span class=\"comment\">//如果成立则对空，即rear指向队首front说明队列为空</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//入队</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//先判断队列是否为满</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(isFull()) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;队列已满，不能加入数据&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\trear++;<span class=\"comment\">//rear后移</span></span><br><span class=\"line\">\t\tarr[rear] = num;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//出队</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getQueue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//判断队列是否为空</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(isEmpty()) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//抛出异常</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;队列为空，不能取数据&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfront++;<span class=\"comment\">//front 后移\t</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> arr[front];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//显示队列的所有元素</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showQueue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//遍历</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(isEmpty()) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;队列空的，没有数据~&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=front+<span class=\"number\">1</span>;i&lt;rear+<span class=\"number\">1</span>;i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.printf(<span class=\"string\">&quot;arr[%d]=%d\\n&quot;</span>,i,arr[i]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//显示队列的头数据，注意不是提取数据</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">headQueue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> num;<span class=\"comment\">//记录队首元素</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//判断</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(isEmpty())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;队列空的，没有数据&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tnum = arr[front+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//获取当前队列的元素个数</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getLength</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> rear-front;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArrayQueueDemo</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//测试</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//创建一个队列</span></span><br><span class=\"line\">\t\tArrayQueue queue = <span class=\"keyword\">new</span> ArrayQueue(<span class=\"number\">6</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> n;<span class=\"comment\">//接收用户输入</span></span><br><span class=\"line\">\t\tScanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> loop = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出一个菜单</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(loop)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;1、输出队列&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;2、退出程序&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;3、入队&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;4、出队&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;5、查看队头数据&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;6、输出队列的元素数量&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;请输入你的选择:&quot;</span>);</span><br><span class=\"line\">\t\t\tn = scanner.nextInt();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span>(n)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\t\t\tqueue.showQueue();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">\t\t\t\tscanner.close();</span><br><span class=\"line\">\t\t\t\tloop = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\t\t\t\tSystem.out.print(<span class=\"string\">&quot;请输入要入队的数据：&quot;</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> value = scanner.nextInt();</span><br><span class=\"line\">\t\t\t\tqueue.addQueue(value);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">int</span> res = queue.getQueue();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">&quot;取出的数据是:&quot;</span>+res);</span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">catch</span>(Exception e)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(e.getMessage());</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">int</span> res = queue.headQueue();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">&quot;队列头的数据为：&quot;</span>+res);</span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">catch</span>(Exception e)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(e.getMessage());</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> l = queue.getLength();</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;队列中元素个数为：&quot;</span>+l);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"3-队列的链式存储链表实现\"><a class=\"markdownIt-Anchor\" href=\"#3-队列的链式存储链表实现\">#</a> 3、队列的链式存储（链表实现）</h1>\n<p>类似于使用链式结构保存线性表，也可以采用链式结构来保存队列的元素，采用链式存储结构的队列也被称为链队列。<br>\n对于链队列而言，由于程序需要从 rear 端添加元素，然后从 front 端删除元素，因此考虑对链队列增加 front、rear 两个引用变量，使他们分别指向链队列的头、尾两个节点。如下图所示：<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200811155745290.png#pic_center\" alt=\"在这里插入图片描述\"><br>\n注意：<strong>由于链队列采用链式存储结构保存数据元素，该队列允许添加无限多个数据元素，因此链队列不会出现列满的问题。</strong></p>\n<h2 id=\"31链式队列的入队\"><a class=\"markdownIt-Anchor\" href=\"#31链式队列的入队\">#</a> 3.1 链式队列的入队</h2>\n<p>对于链队列而言，插入操作的实现非常简单，只要创建一个新节点，让原 rear 节点的 next 指向新节点，在让 rear 指向新节点即可。如下图所示链队列的插入操作：<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200811155852960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"32链式队列的出队\"><a class=\"markdownIt-Anchor\" href=\"#32链式队列的出队\">#</a> 3.2 链式队列的出队</h2>\n<p>对于链队列而言，删除操作的实现也是非常的简单，只要将原 front 节点指向原 front 节点的 next 节点，当然不要忘记释放原 front 节点的引用。如下图所示链队列的移除操纵：<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200811155931243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"33代码实现\"><a class=\"markdownIt-Anchor\" href=\"#33代码实现\">#</a> 3.3 代码实现：</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhukun.Queue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LinkQueue</span> &lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//创建一个私有的结点类，一个链式结点有数据域和指针域</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> T data;      <span class=\"comment\">//T类型的数据</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> Node next;   <span class=\"comment\">//结点类型的指针 指向下一个结点</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//无参构造函数</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Node</span><span class=\"params\">()</span></span>&#123;&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//有参构造函数</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Node</span><span class=\"params\">(T element, Node next)</span></span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.data = element;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.next = next;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//代表链式队列的大小</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> size;</span><br><span class=\"line\">\t<span class=\"comment\">//链式队列的链队首</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Node front;</span><br><span class=\"line\">\t<span class=\"comment\">//链式队列的链队尾</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Node rear;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//初始化链式队列</span></span><br><span class=\"line\">\t<span class=\"comment\">//链式队列无参构造函数</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LinkQueue</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tsize = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tfront = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\trear = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//链式队列含参构造函数</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LinkQueue</span><span class=\"params\">(T element)</span></span>&#123;</span><br><span class=\"line\">\t\trear = <span class=\"keyword\">new</span> Node(element, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\tfront = rear;</span><br><span class=\"line\">\t\tsize ++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//返回链式队列的长度</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getLength</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> size;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//判断队列是否为空</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> size == <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//向rear端队尾插入元素，入队</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addQueue</span><span class=\"params\">(T element)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(isEmpty())&#123;</span><br><span class=\"line\">\t\t\trear = <span class=\"keyword\">new</span> Node(element, <span class=\"keyword\">null</span>);\t</span><br><span class=\"line\">\t\t\tfront = rear;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\trear.next = <span class=\"keyword\">new</span> Node(element, <span class=\"keyword\">null</span>);\t\t</span><br><span class=\"line\">\t\t\trear = rear.next;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tsize ++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//从front端队首移除元素</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">removeQueue</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(isEmpty())&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IndexOutOfBoundsException(<span class=\"string\">&quot;链式队列为空异常&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tNode oldNode = front;</span><br><span class=\"line\">\t\tfront = front.next;</span><br><span class=\"line\">\t\toldNode.next = <span class=\"keyword\">null</span>;<span class=\"comment\">//释放要移除的结点</span></span><br><span class=\"line\">\t\tsize --;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> oldNode.data;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//返回链式队列的堆首元素，但不删除</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">headQueue</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> front.data;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//清空链式队列</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tfront = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\trear = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\tsize = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//遍历队列里的全部数据</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showQueue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tNode p = front;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (p!= <span class=\"keyword\">null</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(p.data);</span><br><span class=\"line\">\t\t\tp=p.next;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LinkQueueDemo</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//测试</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//创建一个队列</span></span><br><span class=\"line\">\t\tLinkQueue&lt;Integer&gt; queue = <span class=\"keyword\">new</span> LinkQueue&lt;Integer&gt;();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> n;<span class=\"comment\">//接收用户输入</span></span><br><span class=\"line\">\t\tScanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> loop = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出一个菜单</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(loop)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;1、输出队列&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;2、退出程序&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;3、入队&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;4、出队&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;5、查看队头数据&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;6、输出队列的元素数量&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;请输入你的选择:&quot;</span>);</span><br><span class=\"line\">\t\t\tn = scanner.nextInt();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span>(n)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\t\t\tqueue.showQueue();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">\t\t\t\tscanner.close();</span><br><span class=\"line\">\t\t\t\tqueue.clear();</span><br><span class=\"line\">\t\t\t\tloop = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\t\t\t\tSystem.out.print(<span class=\"string\">&quot;请输入要入队的数据：&quot;</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> value = scanner.nextInt();</span><br><span class=\"line\">\t\t\t\tqueue.addQueue(value);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">int</span> res = queue.removeQueue();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">&quot;取出的数据是:&quot;</span>+res);</span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">catch</span>(Exception e)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(e.getMessage());</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">int</span> res = queue.headQueue();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">&quot;队列头的数据为：&quot;</span>+res);</span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">catch</span>(Exception e)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(e.getMessage());</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> l = queue.getLength();</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;队列中元素个数为：&quot;</span>+l);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"4-循环队列\"><a class=\"markdownIt-Anchor\" href=\"#4-循环队列\">#</a> 4、循环队列</h1>\n<h2 id=\"41顺序队列假溢出问题引出循环队列\"><a class=\"markdownIt-Anchor\" href=\"#41顺序队列假溢出问题引出循环队列\">#</a> 4.1 顺序队列假溢出问题引出循环队列：</h2>\n<p><img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200811161402730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<ol>\n<li>初始建立空队列时，令 front = rear  = 0</li>\n<li>每当插入新的队列元素时，rear+1</li>\n<li>每当删除队列头元素时，front+1</li>\n</ol>\n<p><strong>缺陷：</strong> 假设当前队列分配的最大空间为 6，队列处于（d）状态时不可再继续入队操作，但实际上数组中还有空的位置，这种现象就叫做 <strong>“假溢出”</strong> ，解决假溢出的途径 --------<strong> 采用循环队列</strong></p>\n<h2 id=\"42何谓循环队列\"><a class=\"markdownIt-Anchor\" href=\"#42何谓循环队列\">#</a> 4.2 何谓循环队列？</h2>\n<p>首先我们要说明的是<strong>循环队列仍然是基于数组实现</strong>的。但是为了形象化的说明问题，我们如下图所示：<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200811162530492.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<ol>\n<li>图中有两个<strong>指针 (其实就是两个整数型变量，因为在这里有指示作用，所以这里理解为指针) front、rear,</strong> 一个指示队头，一个指示队尾。</li>\n<li>rear 和 front 互相追赶着，这个追赶过程就是队列添加和删除的过程，如果 rear 追到 front 说明队列满了，如果 front 追到 rear 说明队列为空。</li>\n<li>令队列空间中的一个单元闲置，使得队列非空时，Q.rear 与 Q.front 之间至少间隔一个空闲单。我们把它掰弯，用的是求余，这样两个值就不会跑出最大范围，并且可以实现弯曲的效果，所以说对于<strong>循环队列我们必须给定最大值 MAXSIZE。</strong></li>\n</ol>\n<h2 id=\"43循环队列的实现过程\"><a class=\"markdownIt-Anchor\" href=\"#43循环队列的实现过程\">#</a> 4.3 循环队列的实现过程</h2>\n<p>我们分析可以发现当 front==rear 时可能队满也可能队空<br>\n此时我们人为浪费一个单元，令队满特征<strong> front=（rear+1）% maxSize</strong>   ---------<strong> 空闲单元法</strong></p>\n<ul>\n<li>对空条件：front == rear</li>\n<li>队满条件：front == （rear+1）% maxsize</li>\n<li>队列长度：L=（N+rear-front）% maxsize</li>\n</ul>\n<p>代码实现：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhukun.Queue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用数组模拟队列-编写一个ArrayQueue类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CircularArrayQueue</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> maxSize;<span class=\"comment\">//表示数组的最大容量</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> front;<span class=\"comment\">//队列头</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> rear;<span class=\"comment\">//队列尾</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] arr;<span class=\"comment\">//该数据用于存放数据，模拟队列</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> length=<span class=\"number\">0</span>;<span class=\"comment\">//队列中实际元素的数量</span></span><br><span class=\"line\">\t<span class=\"comment\">//创建队列构造器</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircularArrayQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> arrMaxSize)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.maxSize = arrMaxSize;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[maxSize];</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.front = <span class=\"number\">0</span>;<span class=\"comment\">//指向队列头部，分析出front是指向队列头的前一个位置</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.rear = <span class=\"number\">0</span>;<span class=\"comment\">//指向队列的尾部，指向队列尾的数据(即就是队列最后一个数据)</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//判断队列是否满</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isFull</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (rear+<span class=\"number\">1</span>)%maxSize == front;<span class=\"comment\">//如果成立则队满，即rear指向容量满足下最后一个数据</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//判断是否为空</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> rear == front;<span class=\"comment\">//如果成立则对空，即rear指向队首front说明队列为空</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//入队</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//先判断队列是否为满</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(isFull()) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;队列已满，不能加入数据&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tarr[rear] = num;</span><br><span class=\"line\">\t\t<span class=\"comment\">//将rear后移，这里要考虑取模</span></span><br><span class=\"line\">\t\trear = (rear+<span class=\"number\">1</span>)%maxSize;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//出队</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getQueue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//判断队列是否为空</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(isEmpty()) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//抛出异常</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;队列为空，不能取数据&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//将front对应的值保留到一个临时变量，将front后移，考虑取模，将临时保存的变量返回</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> value = arr[front];</span><br><span class=\"line\">\t\tfront =(front +<span class=\"number\">1</span>)%maxSize;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//显示队列的所有元素</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showQueue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//遍历</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(isEmpty()) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;队列空的，没有数据~&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=front;i&lt;(rear+maxSize)%maxSize;i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.printf(<span class=\"string\">&quot;arr[%d]=%d\\n&quot;</span>,i,arr[i]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//显示队列的头数据，注意不是提取数据</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">headQueue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> num;<span class=\"comment\">//记录队首元素</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//判断</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(isEmpty())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;队列空的，没有数据&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tnum = arr[front];</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//获取当前队列的元素个数</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getLength</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (rear+maxSize-front)%maxSize;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CircularArrayQueueDemo</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//测试</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//创建一个队列</span></span><br><span class=\"line\">\t\tArrayQueue queue = <span class=\"keyword\">new</span> ArrayQueue(<span class=\"number\">6</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> n;<span class=\"comment\">//接收用户输入</span></span><br><span class=\"line\">\t\tScanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> loop = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出一个菜单</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(loop)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;1、输出队列&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;2、退出程序&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;3、入队&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;4、出队&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;5、查看队头数据&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;6、输出队列的元素数量&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;请输入你的选择:&quot;</span>);</span><br><span class=\"line\">\t\t\tn = scanner.nextInt();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span>(n)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\t\t\tqueue.showQueue();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">\t\t\t\tscanner.close();</span><br><span class=\"line\">\t\t\t\tloop = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\t\t\t\tSystem.out.print(<span class=\"string\">&quot;请输入要入队的数据：&quot;</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> value = scanner.nextInt();</span><br><span class=\"line\">\t\t\t\tqueue.addQueue(value);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">int</span> res = queue.getQueue();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">&quot;取出的数据是:&quot;</span>+res);</span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">catch</span>(Exception e)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(e.getMessage());</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">int</span> res = queue.headQueue();</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">&quot;队列头的数据为：&quot;</span>+res);</span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">catch</span>(Exception e)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.println(e.getMessage());</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> l = queue.getLength();</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;队列中元素个数为：&quot;</span>+l);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "队列",
                "循环队列"
            ]
        }
    ]
}