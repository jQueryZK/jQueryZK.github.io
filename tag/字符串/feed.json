{
    "version": "https://jsonfeed.org/version/1",
    "title": "jQueryZK Blog • All posts by \"字符串\" tag",
    "description": "过去无法挽回，未来可以改变",
    "home_page_url": "https://jqueryzk.gitee.io/zkblog",
    "items": [
        {
            "id": "https://jqueryzk.gitee.io/zkblog/2020/08/30/Java%E5%AD%A6%E4%B9%A0-%E8%AF%A6%E8%B0%88String%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/",
            "url": "https://jqueryzk.gitee.io/zkblog/2020/08/30/Java%E5%AD%A6%E4%B9%A0-%E8%AF%A6%E8%B0%88String%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/",
            "title": "Java学习-详谈String类及其常用方法",
            "date_published": "2020-08-30T11:47:25.663Z",
            "content_html": "<h1 id=\"1-string类\"><a class=\"markdownIt-Anchor\" href=\"#1-string类\">#</a> 1、String 类</h1>\n<h2 id=\"11string类的概述\"><a class=\"markdownIt-Anchor\" href=\"#11string类的概述\">#</a> 1.1String 类的概述</h2>\n<p><code>java.lang.String</code>  类代表<strong>字符串</strong>。Java 程序中所有的字符串文字（例如 “abc” ）都可以被看作是实现此类的实例。类 String 中包括用于检查各个字符串的方法，比如用于<strong>比较字符串</strong>，<strong>搜索字符串</strong>，<strong>提取子字符串</strong>以及<strong>创建具有翻 译为大写或小写的所有字符的字符串的副本</strong><br>\n<strong>特点：</strong></p>\n<ol>\n<li>字符串不变：字符串的值在创建后不能被更改。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s1 = <span class=\"string\">&quot;abc&quot;</span>; s1 += <span class=\"string\">&quot;d&quot;</span>; </span><br><span class=\"line\">System.out.println(s1); <span class=\"comment\">// &quot;abcd&quot; </span></span><br><span class=\"line\"><span class=\"comment\">// 内存中有&quot;abc&quot;，&quot;abcd&quot;两个对象，s1从指向&quot;abc&quot;，改变指向，指向了&quot;abcd&quot;。</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>因为 String 对象是不可变的，所以它们<strong>可以被共享</strong>。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s1 = <span class=\"string\">&quot;abc&quot;</span>; </span><br><span class=\"line\">String s2 = <span class=\"string\">&quot;abc&quot;</span>; </span><br><span class=\"line\"><span class=\"comment\">// 内存中只有一个&quot;abc&quot;对象被创建，同时被s1和s2共享。</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><code>&quot;abc&quot;</code>  等效于  <code>char[] data=&#123; 'a' , 'b' , 'c' &#125;</code>  。（<strong>String 底层是靠字符数组实现的。</strong>）</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如： </span><br><span class=\"line\">String str = <span class=\"string\">&quot;abc&quot;</span>; </span><br><span class=\"line\">相当于： </span><br><span class=\"line\"><span class=\"keyword\">char</span> data[] = &#123;<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>&#125;; </span><br><span class=\"line\">String str = <span class=\"keyword\">new</span> String(data); </span><br><span class=\"line\"><span class=\"comment\">// String底层是靠字符数组实现的。</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"12-使用步骤\"><a class=\"markdownIt-Anchor\" href=\"#12-使用步骤\">#</a> 1.2 使用步骤</h2>\n<ul>\n<li><strong>查看类：</strong>  <code>java.lang.String</code>  ：此类不需要导入。</li>\n<li><strong>查看构造方法：</strong><br>\n <code>public String()</code>  ：初始化新创建的 String 对象，以使其表示空字符序列。<br>\n <code>public String(char[] value)</code>  ：通过当前参数中的字符数组来构造新的 String。<br>\n <code>public String(byte[] bytes)</code>  ：通过使用平台的默认字符集解码当前参数中的字节数组来构造新的 String。<br>\n<strong>构造举例，代码如下：</strong></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 无参构造 </span></span><br><span class=\"line\">String str = <span class=\"keyword\">new</span> String（）； </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过字符数组构造 </span></span><br><span class=\"line\"><span class=\"keyword\">char</span> chars[] = &#123;<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>&#125;; </span><br><span class=\"line\">String str2 = <span class=\"keyword\">new</span> String(chars); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过字节数组构造 </span></span><br><span class=\"line\"><span class=\"keyword\">byte</span> bytes[] = &#123; <span class=\"number\">97</span>, <span class=\"number\">98</span>, <span class=\"number\">99</span> &#125;;</span><br><span class=\"line\">String str3 = <span class=\"keyword\">new</span> String(bytes);</span><br></pre></td></tr></table></figure>\n<h2 id=\"13-常用方法\"><a class=\"markdownIt-Anchor\" href=\"#13-常用方法\">#</a> 1.3 常用方法</h2>\n<ul>\n<li><code>public boolean equals (Object anObject)</code>  ：将此字符串与指定对象进行比较。（String 类中已经对 equals 方法进行了重写所以比较的是对象的内容不是地址）</li>\n<li><code>public boolean equalsIgnoreCase (String anotherString)</code>  ：将此字符串与指定对象进行比较，忽略大小 写</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123; </span><br><span class=\"line\">\t<span class=\"comment\">// 创建字符串对象 </span></span><br><span class=\"line\">\tString s1 = <span class=\"string\">&quot;hello&quot;</span>; </span><br><span class=\"line\">\tString s2 = <span class=\"string\">&quot;hello&quot;</span>; </span><br><span class=\"line\">\tString s3 = <span class=\"string\">&quot;HELLO&quot;</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// boolean equals(Object obj):比较字符串的内容是否相同 </span></span><br><span class=\"line\">\tSystem.out.println(s1.equals(s2)); <span class=\"comment\">// true </span></span><br><span class=\"line\">\tSystem.out.println(s1.equals(s3)); <span class=\"comment\">// false </span></span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">&quot;‐‐‐‐‐‐‐‐‐‐‐&quot;</span>); </span><br><span class=\"line\">\t<span class=\"comment\">//boolean equalsIgnoreCase(String str):比较字符串的内容是否相同,忽略大小写 </span></span><br><span class=\"line\">\tSystem.out.println(s1.equalsIgnoreCase(s2)); <span class=\"comment\">// true </span></span><br><span class=\"line\">\tSystem.out.println(s1.equalsIgnoreCase(s3)); <span class=\"comment\">// true </span></span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">&quot;‐‐‐‐‐‐‐‐‐‐‐&quot;</span>); </span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>获取功能的方法</strong>：</p>\n<ul>\n<li><code>public int length ()</code>  ：返回此字符串的长度。</li>\n<li><code>public String concat (String str)</code>  ：将指定的字符串连接到该字符串的末尾。</li>\n<li><code>public char charAt (int index)</code>  ：获取指定索引处的 char 值。</li>\n<li><code>public int indexOf (String str)</code>  ：获取指定子字符串第一次出现在该字符串内的索引。</li>\n<li><code>public String substring (int beginIndex)</code>  ：获取一个子字符串，从 beginIndex 开始截取字符串到字符串结尾。</li>\n<li><code>public String substring (int beginIndex, int endIndex)</code>  ：获取一个子字符串，从 beginIndex 到 endIndex 截取字符串。含 beginIndex，不含 endIndex。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t\t<span class=\"comment\">//创建字符串对象 </span></span><br><span class=\"line\">\t\tString s = <span class=\"string\">&quot;helloworld&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">// int length():获取字符串的长度，其实也就是字符个数 </span></span><br><span class=\"line\">\t\tSystem.out.println(s.length()); <span class=\"comment\">//10</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;‐‐‐‐‐‐‐‐&quot;</span>); </span><br><span class=\"line\">\t\t<span class=\"comment\">// String concat (String str):将将指定的字符串连接到该字符串的末尾. </span></span><br><span class=\"line\">\t\tString s2 = s.concat(<span class=\"string\">&quot;**hello itheima&quot;</span>);<span class=\"comment\">//helloworld**hello itheima</span></span><br><span class=\"line\">\t\tSystem.out.println(s2);<span class=\"comment\">// helloworld**hello itheima </span></span><br><span class=\"line\">\t\t<span class=\"comment\">// char charAt(int index):获取指定索引处的字符 </span></span><br><span class=\"line\">\t\tSystem.out.println(s.charAt(<span class=\"number\">0</span>)); <span class=\"comment\">//h</span></span><br><span class=\"line\">\t\tSystem.out.println(s.charAt(<span class=\"number\">1</span>)); <span class=\"comment\">//e</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;‐‐‐‐‐‐‐‐&quot;</span>); </span><br><span class=\"line\">\t\t<span class=\"comment\">// int indexOf(String str):获取str在字符串对象中第一次出现的索引,没有返回‐1 </span></span><br><span class=\"line\">\t\tSystem.out.println(s.indexOf(<span class=\"string\">&quot;l&quot;</span>)); <span class=\"comment\">//2</span></span><br><span class=\"line\">\t\tSystem.out.println(s.indexOf(<span class=\"string\">&quot;owo&quot;</span>));<span class=\"comment\">//4 </span></span><br><span class=\"line\">\t\tSystem.out.println(s.indexOf(<span class=\"string\">&quot;ak&quot;</span>)); <span class=\"comment\">//-1</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;‐‐‐‐‐‐‐‐&quot;</span>); </span><br><span class=\"line\">\t\t<span class=\"comment\">// String substring(int start):从start开始截取字符串到字符串结尾 </span></span><br><span class=\"line\">\t\tSystem.out.println(s.substring(<span class=\"number\">0</span>)); <span class=\"comment\">//helloworld</span></span><br><span class=\"line\">\t\tSystem.out.println(s.substring(<span class=\"number\">5</span>)); <span class=\"comment\">//world</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;‐‐‐‐‐‐‐‐&quot;</span>); </span><br><span class=\"line\">\t\t<span class=\"comment\">// String substring(int start,int end):从start到end截取字符串。含start，不含end。 </span></span><br><span class=\"line\">\t\tSystem.out.println(s.substring(<span class=\"number\">0</span>, s.length())); <span class=\"comment\">//helloworld</span></span><br><span class=\"line\">\t\tSystem.out.println(s.substring(<span class=\"number\">3</span>,<span class=\"number\">8</span>)); <span class=\"comment\">//lowor</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>转换功能的方法</strong></p>\n<ul>\n<li><code>public char[] toCharArray ()</code>  ：将此字符串转换为新的字符数组。</li>\n<li><code>public byte[] getBytes ()</code>  ：使用平台的默认字符集将该 String 编码转换为新的字节数组。</li>\n<li><code>public String replace (CharSequence target, CharSequence replacement)</code>  ：将与 target 匹配的字符串使 用 replacement 字符串替换。<strong>CharSequence 是一个接口，也是一种引用类型。作为参数类型，可以把 String 对象传递到方法中</strong></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t\t<span class=\"comment\">//创建字符串对象 </span></span><br><span class=\"line\">\t\tString s = <span class=\"string\">&quot;abcde&quot;</span>; </span><br><span class=\"line\">\t\t<span class=\"comment\">// char[] toCharArray():把字符串转换为字符数组 </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">char</span>[] chs = s.toCharArray(); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x = <span class=\"number\">0</span>; x &lt; chs.length; x++) &#123; </span><br><span class=\"line\">\t\t\tSystem.out.println(chs[x]); </span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;‐‐‐‐‐‐‐‐‐‐‐&quot;</span>); </span><br><span class=\"line\">\t\t<span class=\"comment\">// byte[] getBytes ():把字符串转换为字节数组 </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">byte</span>[] bytes = s.getBytes(); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x = <span class=\"number\">0</span>; x &lt; bytes.length; x++) </span><br><span class=\"line\">\t\t&#123; </span><br><span class=\"line\">\t\t\tSystem.out.println(bytes[x]); </span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;‐‐‐‐‐‐‐‐‐‐‐&quot;</span>); </span><br><span class=\"line\">\t\t<span class=\"comment\">// 替换字母it为大写IT</span></span><br><span class=\"line\">\t\tString str = <span class=\"string\">&quot;itcast itheima&quot;</span>; </span><br><span class=\"line\">\t\tString replace = str.replace(<span class=\"string\">&quot;it&quot;</span>, <span class=\"string\">&quot;IT&quot;</span>); </span><br><span class=\"line\">\t\tSystem.out.println(replace); <span class=\"comment\">// ITcast ITheima </span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;‐‐‐‐‐‐‐‐‐‐‐&quot;</span>); </span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>分割功能的方法</strong></p>\n<ul>\n<li><code>public String[] split(String regex)</code>  ：将此字符串按照给定的 regex（规则）拆分为字符串数组。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t\t<span class=\"comment\">//创建字符串对象 </span></span><br><span class=\"line\">\t\tString s = <span class=\"string\">&quot;aa|bb|cc&quot;</span>;</span><br><span class=\"line\">\t\tString[] strArray = s.split(<span class=\"string\">&quot;|&quot;</span>); <span class=\"comment\">// [&quot;aa&quot;,&quot;bb&quot;,&quot;cc&quot;] </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x = <span class=\"number\">0</span>; x &lt; strArray.length; x++)</span><br><span class=\"line\">\t\t&#123; </span><br><span class=\"line\">\t\t\tSystem.out.println(strArray[x]); <span class=\"comment\">// aa bb cc &#125; &#125;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"14-string类的练习\"><a class=\"markdownIt-Anchor\" href=\"#14-string类的练习\">#</a> 1.4 String 类的练习</h2>\n<p><strong>拼接字符串</strong><br>\n定义一个方法，把数组 {1,2,3} 按照指定个格式拼接成一个字符串。格式参照如下：[1#2#3]。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t<span class=\"comment\">//定义一个int类型的数组 </span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;; </span><br><span class=\"line\">\t<span class=\"comment\">//调用方法 </span></span><br><span class=\"line\">\tString s = arrayToString(arr); </span><br><span class=\"line\">\t<span class=\"comment\">//输出结果 </span></span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">&quot;s:&quot;</span> + s); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> *  写方法实现把数组中的元素按照指定的格式拼接成一个字符串 </span></span><br><span class=\"line\"><span class=\"comment\"> *  两个明确：</span></span><br><span class=\"line\"><span class=\"comment\"> *  返回值类型：String </span></span><br><span class=\"line\"><span class=\"comment\"> *  参数列表：int[] arr </span></span><br><span class=\"line\"><span class=\"comment\"> */</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">arrayToString</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123; </span><br><span class=\"line\">\t<span class=\"comment\">// 创建字符串s</span></span><br><span class=\"line\">\tString s = <span class=\"keyword\">new</span> String(<span class=\"string\">&quot;[&quot;</span>);</span><br><span class=\"line\">\t<span class=\"comment\">// 遍历数组，并拼接字符串 </span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x = <span class=\"number\">0</span>; x &lt; arr.length; x++) &#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (x == arr.length -<span class=\"number\">1</span>) </span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ts = s.concat(arr[x] + <span class=\"string\">&quot;]&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123; s = s.concat(arr[x] + <span class=\"string\">&quot;#&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>统计字符个数</strong><br>\n键盘录入一个字符，统计字符串中大小写字母及数字字符个数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t\t<span class=\"comment\">//键盘录入一个字符串数据 </span></span><br><span class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in); </span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入一个字符串数据：&quot;</span>); </span><br><span class=\"line\">\t\tString s = sc.nextLine(); </span><br><span class=\"line\">\t\t<span class=\"comment\">//定义三个统计变量，初始化值都是0 </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> bigCount = <span class=\"number\">0</span>; </span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> smallCount = <span class=\"number\">0</span>; </span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> numberCount = <span class=\"number\">0</span>; </span><br><span class=\"line\">\t\t<span class=\"comment\">//遍历字符串，得到每一个字符 </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x=<span class=\"number\">0</span>; x&lt;s.length(); x++) </span><br><span class=\"line\">\t\t&#123; </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">char</span> ch = s.charAt(x); </span><br><span class=\"line\">\t\t\t<span class=\"comment\">//拿字符进行判断 </span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(ch&gt;=<span class=\"string\">&#x27;A&#x27;</span>&amp;&amp;ch&lt;=<span class=\"string\">&#x27;Z&#x27;</span>) </span><br><span class=\"line\">\t\t\t&#123; </span><br><span class=\"line\">\t\t\t\tbigCount++; </span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch&gt;=<span class=\"string\">&#x27;a&#x27;</span>&amp;&amp;ch&lt;=<span class=\"string\">&#x27;z&#x27;</span>) </span><br><span class=\"line\">\t\t\t&#123; </span><br><span class=\"line\">\t\t\t\tsmallCount++; </span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch&gt;=<span class=\"string\">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class=\"string\">&#x27;9&#x27;</span>) </span><br><span class=\"line\">\t\t\t&#123; </span><br><span class=\"line\">\t\t\t\tnumberCount++; </span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> </span><br><span class=\"line\">\t\t\t&#123; </span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;该字符&quot;</span>+ch+<span class=\"string\">&quot;非法&quot;</span>); </span><br><span class=\"line\">\t\t\t&#125; </span><br><span class=\"line\">\t\t&#125;<span class=\"comment\">//输出结果 </span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;大写字符：&quot;</span>+bigCount+<span class=\"string\">&quot;个&quot;</span>); </span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;小写字符：&quot;</span>+smallCount+<span class=\"string\">&quot;个&quot;</span>); </span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;数字字符：&quot;</span>+numberCount+<span class=\"string\">&quot;个&quot;</span>); </span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">请输入一个字符串数据：</span><br><span class=\"line\">xGSHDsdas</span><br><span class=\"line\">大写字符：<span class=\"number\">4</span>个</span><br><span class=\"line\">小写字符：<span class=\"number\">5</span>个</span><br><span class=\"line\">数字字符：<span class=\"number\">0</span>个</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "java",
                "字符串",
                "String"
            ]
        }
    ]
}