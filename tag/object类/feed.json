{
    "version": "https://jsonfeed.org/version/1",
    "title": "jQueryZK Blog • All posts by \"object类\" tag",
    "description": "过去无法挽回，未来可以改变",
    "home_page_url": "https://jQueryZK.github.io",
    "items": [
        {
            "id": "https://jqueryzk.github.io/2020/08/25/Java%E5%AD%A6%E4%B9%A0-%E8%AF%A6%E8%B0%88%E6%9C%80%E9%AB%98%E5%B1%82%E7%88%B6%E7%B1%BB-Object%E7%B1%BB/",
            "url": "https://jqueryzk.github.io/2020/08/25/Java%E5%AD%A6%E4%B9%A0-%E8%AF%A6%E8%B0%88%E6%9C%80%E9%AB%98%E5%B1%82%E7%88%B6%E7%B1%BB-Object%E7%B1%BB/",
            "title": "Java学习-详谈最高层父类-Object类",
            "date_published": "2020-08-25T13:05:52.356Z",
            "content_html": "<h1 id=\"1-object类\"><a class=\"markdownIt-Anchor\" href=\"#1-object类\">#</a> 1、Object 类</h1>\n<ol>\n<li>Object 类是所有 Java 类的根父类  （多层继承中的最高层的父类）</li>\n<li>如果在类的声明中未使用 extends 关键字指明其父类，则默认父类为 Object 类</li>\n</ol>\n<p>比如：public class Person { } 等价于：public class Person extends Object</p>\n<p>method（Object obj）{ }   // 表示该方法可以接收任何类作为其参数</p>\n<p>（当我们想给某个方法设置一个形参参数，可以确定传递的实参一定会是一个类，但不确定会是一个什么类也就是形参的类型不确定，这时候就可以把形参设置为 Object 类型。）</p>\n<h1 id=\"2-object类中的主要方法\"><a class=\"markdownIt-Anchor\" href=\"#2-object类中的主要方法\">#</a> 2、Object 类中的主要方法</h1>\n<p><img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200812153259688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"21对象相等判断方法equals\"><a class=\"markdownIt-Anchor\" href=\"#21对象相等判断方法equals\">#</a> 2.1 对象相等判断方法：equals（）</h2>\n<p>该方法比较的是对象是否相等（其实就是比较堆内地址）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    String name;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> age;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String name,<span class=\"keyword\">int</span> age)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">       <span class=\"keyword\">this</span>.age=age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Text</span></span>&#123;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">     </span>&#123;</span><br><span class=\"line\">         Student s1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;Mary&quot;</span>,<span class=\"number\">21</span>);</span><br><span class=\"line\">         Student s2 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;Mary&quot;</span>,<span class=\"number\">21</span>);</span><br><span class=\"line\">         System.out.println(s1.equals(s2));<span class=\"comment\">//输出一个boolean值  false</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>输出 false 表示 s1 和 s2 指向的不是同一个对象即他们指向的堆内地址是不同的<br>\n（关于 equals () 的详细说明在后面的 “==” 和 equals 的对比和使用中会具体阐述）</strong></p>\n<h2 id=\"22-hashcode方法\"><a class=\"markdownIt-Anchor\" href=\"#22-hashcode方法\">#</a> 2.2 hashCode（）方法</h2>\n<p><strong>hashCode 方法的作用：</strong> 对于包含容器类型的程序设计语言来说，基本上都会涉及到 hashCode。在 Java 中也一样，hashCode 方法的主要作用是为了配合基于散列的集合一起正常运行，这样的散列集合包括<strong> HashSet、HashMap 以及 HashTable</strong>。</p>\n<p>（在集合查找时，hashcode 能大大降低对象比较次数，提高查找效率！）</p>\n<p><strong>1、hashCode 返回的就是对象的存储地址吗？</strong></p>\n<p>这种看法是不全面的，确实有些 JVM 在实现时是直接返回对象的存储地址，但是大多时候并不是这样，只能说可能存储地址有一定关联</p>\n<p><strong>2、可以根据 hashCode 值判断两个对象是否相等吗？</strong></p>\n<p>肯定是不可以的，因为不同的对象可能会生成相同的 hashcode 值。虽然不能根据 hashcode 值判断两个对象是否相等，但是可以直接根据 hashcode 值判断两个对象不等，如果两个对象的 hashcode 值不等，则必定是两个不同的对象。如果要判断两个对象是否真正相等，必须通过 equals 方法。也就是说对于两个对象：</p>\n<ul>\n<li>如果调用 equals 方法得到的结果为 true，则两个对象的 hashcode 值必定相等；</li>\n<li>如果 equals 方法得到的结果为 false，则两个对象的 hashcode 值不一定不同；</li>\n<li>如果两个对象的 hashcode 值不等，则 equals 方法得到的结果必定为 false；</li>\n<li>如果两个对象的 hashcode 值相等，则 equals 方法得到的结果未知。</li>\n</ul>\n<p><strong>3、在有些情况下，在设计一个类的时候需要重写 equals 方法，但是千万要注意，在重写 equals 方法的同时也要重写 hashCode 方法。（比如在 String 类中就已经重写了这两个方法）</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test01</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t     </span>&#123;</span><br><span class=\"line\">\t         String s1 = <span class=\"keyword\">new</span> String(<span class=\"string\">&quot;aaa&quot;</span>);</span><br><span class=\"line\">\t         String s2 = <span class=\"keyword\">new</span> String(<span class=\"string\">&quot;aaa&quot;</span>);</span><br><span class=\"line\">\t         System.out.println(s1.equals(s2));</span><br><span class=\"line\">\t         System.out.println(s1.hashCode());</span><br><span class=\"line\">\t         System.out.println(s2.hashCode());</span><br><span class=\"line\">\t     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>输出结果：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">true</span></span><br><span class=\"line\"><span class=\"number\">96321</span></span><br><span class=\"line\"><span class=\"number\">96321</span></span><br></pre></td></tr></table></figure>\n<p>下面为一个实例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">int</span> num;</span><br><span class=\"line\">     String name;</span><br><span class=\"line\"> </span><br><span class=\"line\">     Student(<span class=\"keyword\">int</span> num, String name) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">this</span>.num = num;</span><br><span class=\"line\">         <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> num + <span class=\"string\">&quot;:&quot;</span> + name;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test01</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t         HashSet&lt;Student&gt; hs = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">\t\t         hs.add(<span class=\"keyword\">new</span> Student(<span class=\"number\">1</span>, <span class=\"string\">&quot;zhangsan&quot;</span>));</span><br><span class=\"line\">\t\t         hs.add(<span class=\"keyword\">new</span> Student(<span class=\"number\">2</span>, <span class=\"string\">&quot;lisi&quot;</span>));</span><br><span class=\"line\">\t\t         hs.add(<span class=\"keyword\">new</span> Student(<span class=\"number\">3</span>, <span class=\"string\">&quot;wangwu&quot;</span>));</span><br><span class=\"line\">\t\t         hs.add(<span class=\"keyword\">new</span> Student(<span class=\"number\">1</span>, <span class=\"string\">&quot;zhangsan&quot;</span>));</span><br><span class=\"line\">\t\t </span><br><span class=\"line\">\t\t         Iterator it = hs.iterator();</span><br><span class=\"line\">\t\t         <span class=\"keyword\">while</span> (it.hasNext()) &#123;</span><br><span class=\"line\">\t\t            System.out.println(it.next());</span><br><span class=\"line\">\t\t         &#125;</span><br><span class=\"line\">\t\t     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>运行结果：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">3</span>:wangwu</span><br><span class=\"line\"><span class=\"number\">1</span>:zhangsan</span><br><span class=\"line\"><span class=\"number\">2</span>:lisi</span><br><span class=\"line\"><span class=\"number\">1</span>:zhangsan</span><br></pre></td></tr></table></figure>\n<p><strong>思考：</strong> 为什么 hashset 添加了相等的元素呢，这是不是和 hashset 的原则违背了呢？回答是：没有。因为在根据 hashcode () 对两次建立的 new Student (1,“zhangsan”) 对象进行比较时，<strong>生成的是不同的哈希码值，所以 hashset 把他当作不同的对象对待了，当然此时的 equals () 方法返回的值也不等。</strong></p>\n<p>为什么会生成不同的哈希码值呢？上面我们在比较 s1 和 s2 的时候不是生成了同样的哈希码吗？原因就在于我们自己写的 Student 类并<strong>没有重写自己的 hashcode () 和 equals () 方法</strong>，所以在比较时，是继承的 object 类中的 hashcode () 方法，<strong>而 object 类中的 hashcode () 方法是一个本地方法，比较的是对象的地址（引用地址），使用 new 方法创建对象，两次生成的当然是不同的对象了，造成的结果就是两个对象的 hashcode () 返回的值不一样，所以 Hashset 会把它们当作不同的对象对待。</strong></p>\n<p><strong>解决途径：在 Student 类中重写 hashCode（）和 equals 方法 ——&gt;</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">int</span> num;</span><br><span class=\"line\">     String name;</span><br><span class=\"line\"> </span><br><span class=\"line\">     Student(<span class=\"keyword\">int</span> num, String name) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">this</span>.num = num;</span><br><span class=\"line\">         <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> num * name.hashCode();</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">         Student s = (Student) o;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> num == s.num &amp;&amp; name.equals(s.name);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> num + <span class=\"string\">&quot;:&quot;</span> + name;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test01</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t         HashSet&lt;Student&gt; hs = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">\t\t         hs.add(<span class=\"keyword\">new</span> Student(<span class=\"number\">1</span>, <span class=\"string\">&quot;zhangsan&quot;</span>));</span><br><span class=\"line\">\t\t         hs.add(<span class=\"keyword\">new</span> Student(<span class=\"number\">2</span>, <span class=\"string\">&quot;lisi&quot;</span>));</span><br><span class=\"line\">\t\t         hs.add(<span class=\"keyword\">new</span> Student(<span class=\"number\">3</span>, <span class=\"string\">&quot;wangwu&quot;</span>));</span><br><span class=\"line\">\t\t         hs.add(<span class=\"keyword\">new</span> Student(<span class=\"number\">1</span>, <span class=\"string\">&quot;zhangsan&quot;</span>));</span><br><span class=\"line\">\t\t </span><br><span class=\"line\">\t\t         Iterator it = hs.iterator();</span><br><span class=\"line\">\t\t         <span class=\"keyword\">while</span> (it.hasNext()) &#123;</span><br><span class=\"line\">\t\t            System.out.println(it.next());</span><br><span class=\"line\">\t\t         &#125;</span><br><span class=\"line\">\t\t     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>运行结果：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">3</span>:wangwu</span><br><span class=\"line\"><span class=\"number\">2</span>:lisi</span><br><span class=\"line\"><span class=\"number\">1</span>:zhangsan</span><br></pre></td></tr></table></figure>\n<h2 id=\"23取得对象信息的方法tostring\"><a class=\"markdownIt-Anchor\" href=\"#23取得对象信息的方法tostring\">#</a> 2.3 取得对象信息的方法：toString（）</h2>\n<p>该方法在打印对象时被调用，将对象信息变为字符串返回，<strong>默认输出对象地址。</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> zhukun;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">int</span> age=<span class=\"number\">20</span>;</span><br><span class=\"line\">     String name = <span class=\"string\">&quot;zhukun&quot;</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test01</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t         Student s = <span class=\"keyword\">new</span> Student();</span><br><span class=\"line\">\t\t         System.out.println(<span class=\"string\">&quot;姓名：&quot;</span>+s.name+<span class=\"string\">&quot;年龄：&quot;</span>+s.age);<span class=\"comment\">//输出对象属性</span></span><br><span class=\"line\">\t\t         System.out.println(s);<span class=\"comment\">//直接输出对象信息</span></span><br><span class=\"line\">                 System.out.println(s.toString());<span class=\"comment\">//调用父类方法输出对象信息</span></span><br><span class=\"line\">\t\t         &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>运行结果：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">姓名：zhukun年龄：<span class=\"number\">20</span></span><br><span class=\"line\">zhukun.Student@<span class=\"number\">15d</span>b9742</span><br><span class=\"line\">zhukun.Student@<span class=\"number\">15d</span>b9742</span><br></pre></td></tr></table></figure>\n<p>上述结果看出编译器默认调用 toString () 方法输出对象，但<strong>输出的是对象的地址</strong>，我们并不能看懂它的意思。那么<strong>就要通过重写 Object 类的 toString () 方法来输出对象属性信息。</strong></p>\n<p>重写 toString 方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> zhukun;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">int</span> age=<span class=\"number\">20</span>;</span><br><span class=\"line\">     String name = <span class=\"string\">&quot;zhukun&quot;</span>;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">     </span>&#123;</span><br><span class=\"line\">    \t <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名：&quot;</span>+name+<span class=\"string\">&quot;，年龄：&quot;</span>+age;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test01</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t         Student s = <span class=\"keyword\">new</span> Student();</span><br><span class=\"line\">\t\t         System.out.println(<span class=\"string\">&quot;姓名：&quot;</span>+s.name+<span class=\"string\">&quot;年龄：&quot;</span>+s.age);<span class=\"comment\">//输出对象属性</span></span><br><span class=\"line\">\t\t         System.out.println(s);<span class=\"comment\">//直接输出对象信息</span></span><br><span class=\"line\">                 System.out.println(s.toString());<span class=\"comment\">//调用父类方法输出对象信息</span></span><br><span class=\"line\">\t\t         &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">姓名：zhukun年龄：<span class=\"number\">20</span></span><br><span class=\"line\">姓名：zhukun，年龄：<span class=\"number\">20</span></span><br><span class=\"line\">姓名：zhukun，年龄：<span class=\"number\">20</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"4-instanceof操作符\"><a class=\"markdownIt-Anchor\" href=\"#4-instanceof操作符\">#</a> 4、instanceof 操作符</h1>\n<p>x  instanceof A：检验 x 是否为类 A 的对象，返回值为 boolean 型</p>\n<ul>\n<li>要求 x 所属的类与类 A 必须是子类和父类的关系，否则编译错误。</li>\n<li>如果 x 属于类 A 的子类 B，x instanceof A 的值也为 true。<br>\n（就是检验某个对象是不是类 A 的子类）</li>\n</ul>\n<p><strong>（就是检验某个对象是不是类 A 的子类）</strong></p>\n",
            "tags": [
                "java",
                "面向对象",
                "继承",
                "Object类"
            ]
        }
    ]
}