{
    "version": "https://jsonfeed.org/version/1",
    "title": "jQueryZK Blog • All posts by \"hashmap\" tag",
    "description": "过去无法挽回，未来可以改变",
    "home_page_url": "https://jqueryzk.gitee.io/zkblog",
    "items": [
        {
            "id": "https://jqueryzk.gitee.io/zkblog/2020/09/12/Java%E5%AD%A6%E4%B9%A0-%E8%AF%A6%E8%B0%88Map%E9%9B%86%E5%90%88%EF%BC%88HashMap%E3%80%81LinkedHashMap%E3%80%81TreeMap%EF%BC%89/",
            "url": "https://jqueryzk.gitee.io/zkblog/2020/09/12/Java%E5%AD%A6%E4%B9%A0-%E8%AF%A6%E8%B0%88Map%E9%9B%86%E5%90%88%EF%BC%88HashMap%E3%80%81LinkedHashMap%E3%80%81TreeMap%EF%BC%89/",
            "title": "Java学习-详谈Map集合（HashMap、LinkedHashMap、TreeMap）",
            "date_published": "2020-09-12T07:32:59.727Z",
            "content_html": "<h1 id=\"1-map集合\"><a class=\"markdownIt-Anchor\" href=\"#1-map集合\">#</a> 1、Map 集合</h1>\n<h2 id=\"11map集合介绍\"><a class=\"markdownIt-Anchor\" href=\"#11map集合介绍\">#</a> 1.1Map 集合介绍</h2>\n<p>现实生活中，我们常会看到这样的一种集合：IP 地址与主机名，身份证号与个人，系统用户名与系统用户对象等， 这种<strong>一一对应的关系</strong>，就叫做<strong>映射</strong>。Java 提供了专门的集合类用来存放这种对象关系的对象，即  <code>java.util.Map</code>  接 口。</p>\n<h2 id=\"12map继承关系\"><a class=\"markdownIt-Anchor\" href=\"#12map继承关系\">#</a> 1.2Map 继承关系</h2>\n<p><img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200912120652291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n（1）： <code>AbstractMap</code>  是一个<strong>抽象类</strong>， 继承 Map，实现了 Map 的大部分 API，它的作用 Map 的实现类继承它，可以减少重复编码！<br>\n（2）： <code>SortedMap</code>  是一个<strong>接口</strong> 继承 Map，自己也封装一下方法，SortedMap 中的内容是<strong>排序的键值对</strong>，排序的方法是<strong>通过比较器 (Comparator)</strong>。SortedMap 的排序方式有两种：<strong>自然排序</strong> 或者 <strong>用户指定比较器</strong>。<br>\n（3）： <code>ConcurrentMap</code>  是一个接口，并且继承 Map 接口，在 <code>java.util.concurrent</code>  包下！<br>\n（4）： <code>HashMap</code>  继承于 AbstractMap，HashMap 的内容是 “<strong>键值对，但不保证次序</strong>”！<br>\n（5）：  <code>TreeMap</code>  继承于 AbstractMap，且实现了 NavigableMap 接口；因此，TreeMap 中的内容是键值对，<strong>有序</strong>的键值对！<br>\n（6）： <code>ConcurrentHashMap</code>  继承 AbstractMap 实现 ConcurrentMap，是一个<strong>并发的哈希表</strong>！此类与 Hashtable 相似，但与 HashMap 不同，它<strong>不允许将 null 用作键或值</strong>。<strong>线程安全</strong>，但是实现方法和 Hashtable 完全不同（并发情况可以使用） 。<br>\n（7）： <code>Dictionary</code>  是一个抽象类（数据字典），HashTable 继承 Dictionary 并实现 Map 接口，也是键值对，但不保证次序！ <code>Hashtable</code>  是<strong>线程安全</strong>的，而且它支持通过 Enumeration 去遍历。（现在使用很少，并发操作效率太低）</p>\n<h2 id=\"13map集合与collection集合存储形式的不同\"><a class=\"markdownIt-Anchor\" href=\"#13map集合与collection集合存储形式的不同\">#</a> 1.3Map 集合与 Collection 集合存储形式的不同</h2>\n<p><img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200912122042130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li><code>Collection</code>  中的集合，<strong>元素是孤立存在</strong>的（理解为单身），向集合中存储元素采用一个个元素的方式存储。</li>\n<li><code>Map</code>  中的集合，元素是<strong>成对存在</strong>的 (理解为夫妻)。每个元素由<strong>键与值</strong>两部分组成，<font color=red>通过键可以找对所对应的值</font>。</li>\n<li>Collection 中的集合称为<strong>单列集合</strong>， Map 中的集合称为<strong>双列集合</strong>。</li>\n<li>需要注意的是， Map 中的集合<font color=blue><strong>不能包含重复的键，值可以重复；每个键只能对应一个值</strong></font>。</li>\n</ul>\n<h2 id=\"14map常用方法\"><a class=\"markdownIt-Anchor\" href=\"#14map常用方法\">#</a> 1.4Map 常用方法</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         从此映射中移除所有映射关系（可选操作）。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">containsKey</span><span class=\"params\">(Object key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         如果此映射包含指定键的映射关系，则返回 <span class=\"keyword\">true</span>。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">containsValue</span><span class=\"params\">(Object value)</span> </span></span><br><span class=\"line\"><span class=\"function\">         如果此映射将一个或多个键映射到指定值，则返回 <span class=\"keyword\">true</span>。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object o)</span> </span></span><br><span class=\"line\"><span class=\"function\">         比较指定的对象与此映射是否相等。 </span></span><br><span class=\"line\"><span class=\"function\">V <span class=\"title\">get</span><span class=\"params\">(Object key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回指定键所映射的值；如果此映射不包含该键的映射关系，则返回 <span class=\"keyword\">null</span>。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射的哈希码值。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         如果此映射未包含键-值映射关系，则返回 <span class=\"keyword\">true</span>。  </span></span><br><span class=\"line\"><span class=\"function\">V <span class=\"title\">put</span><span class=\"params\">(K key, V value)</span> </span></span><br><span class=\"line\"><span class=\"function\">         将指定的值与此映射中的指定键关联（可选操作）。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">putAll</span><span class=\"params\">(Map&lt;? extends K,? extends V&gt; m)</span> </span></span><br><span class=\"line\"><span class=\"function\">         从指定映射中将所有映射关系复制到此映射中（可选操作）。 </span></span><br><span class=\"line\"><span class=\"function\">V <span class=\"title\">remove</span><span class=\"params\">(Object key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         如果存在一个键的映射关系，则将其从此映射中移除（可选操作）。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射中的键-值映射关系数。 </span></span><br><span class=\"line\"><span class=\"function\">Set&lt;K&gt; <span class=\"title\">keySet</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         用于返回Key集的Set合       </span></span><br><span class=\"line\"><span class=\"function\">Set&lt;Map.Entry&lt;K,V&gt;&gt; <span class=\"title\">entrySet</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         用于返回&lt;Key——Value&gt; 集的Set集合 </span></span><br><span class=\"line\"><span class=\"function\">Collection&lt;V&gt; <span class=\"title\">values</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         用于返回value集的Collection集合。 </span></span><br></pre></td></tr></table></figure>\n<p>Map 接口常用方法演示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span> </span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t\t<span class=\"comment\">//创建 map对象 </span></span><br><span class=\"line\">\t\tHashMap&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;String, String&gt;(); </span><br><span class=\"line\">\t\t<span class=\"comment\">//添加元素到集合 </span></span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;黄晓明&quot;</span>, <span class=\"string\">&quot;杨颖&quot;</span>); </span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;文章&quot;</span>, <span class=\"string\">&quot;马伊琍&quot;</span>); </span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;邓超&quot;</span>, <span class=\"string\">&quot;孙俪&quot;</span>); </span><br><span class=\"line\">\t\tSystem.out.println(map); </span><br><span class=\"line\">\t\t<span class=\"comment\">//String remove(String key) </span></span><br><span class=\"line\">\t\t<span class=\"comment\">//把指定的键 所对应的键值对元素 在Map集合中删除，返回被删除元素的 值</span></span><br><span class=\"line\">\t\tSystem.out.println(map.remove(<span class=\"string\">&quot;文章&quot;</span>));</span><br><span class=\"line\">\t\tSystem.out.println(map); </span><br><span class=\"line\">\t\t<span class=\"comment\">// 根据指定的键，在Map集合中获取对应的值</span></span><br><span class=\"line\">\t\tSystem.out.println(map.get(<span class=\"string\">&quot;黄晓明&quot;</span>)); </span><br><span class=\"line\">\t\tSystem.out.println(map.get(<span class=\"string\">&quot;邓超&quot;</span>)); </span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;邓超=孙俪, 文章=马伊琍, 黄晓明=杨颖&#125;</span><br><span class=\"line\">马伊琍</span><br><span class=\"line\">&#123;邓超=孙俪, 黄晓明=杨颖&#125;</span><br><span class=\"line\">杨颖</span><br><span class=\"line\">孙俪</span><br></pre></td></tr></table></figure>\n<p>（注意：在使用 put 方法时，若指定的键 (key) 在集合中没有，则没有这个键对应的值，返回 null，并把指定的键值添加到 集合中； 若指定的键 (key) 在集合中存在，则返回值为集合中键对应的值（该值为替换前的值），并把指定键所对应的 值，替换成指定的新值。）</p>\n<h2 id=\"15map集合遍历键找值方式\"><a class=\"markdownIt-Anchor\" href=\"#15map集合遍历键找值方式\">#</a> 1.5Map 集合遍历键找值方式</h2>\n<p>键找值方式：即<strong>通过元素中的键，获取键所对应的值</strong><br>\n操作步骤：</p>\n<ol>\n<li>获取 Map 中所有的键，由于键是唯一的，所以返回一个 Set 集合存储所有的键。方法提示: keyset ()</li>\n<li>遍历键的 Set 集合，得到每一个键。</li>\n<li>根据键，获取键所对应的值。方法提示: get (K key)</li>\n</ol>\n<p>（<font color=red>Map 集合不能直接使用迭代器或者 foreach 进行遍历。但是转成 Set 之后就可以使用了</font>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span> </span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"comment\">//创建Map集合对象 </span></span><br><span class=\"line\">\t\tHashMap&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;String,String&gt;(); </span><br><span class=\"line\">\t\t<span class=\"comment\">//添加元素到集合 </span></span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;胡歌&quot;</span>, <span class=\"string\">&quot;霍建华&quot;</span>); </span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;郭德纲&quot;</span>, <span class=\"string\">&quot;于谦&quot;</span>); </span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;薛之谦&quot;</span>, <span class=\"string\">&quot;大张伟&quot;</span>); </span><br><span class=\"line\">\t\t<span class=\"comment\">//获取所有的键 获取键集</span></span><br><span class=\"line\">\t\tSet&lt;String&gt; keys = map.keySet(); </span><br><span class=\"line\">\t\t<span class=\"comment\">// 遍历键集 得到 每一个键 </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (String key : keys) </span><br><span class=\"line\">\t\t&#123; </span><br><span class=\"line\">\t\t\t<span class=\"comment\">//key 就是键 </span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//获取对应值 </span></span><br><span class=\"line\">\t\t\tString value = map.get(key); </span><br><span class=\"line\">\t\t\tSystem.out.println(key+<span class=\"string\">&quot;的CP是：&quot;</span>+value); </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">郭德纲的CP是：于谦</span><br><span class=\"line\">薛之谦的CP是：大张伟</span><br><span class=\"line\">胡歌的CP是：霍建华</span><br></pre></td></tr></table></figure>\n<p><strong>遍历图解</strong>：<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200912132121145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"16entry键值对对象\"><a class=\"markdownIt-Anchor\" href=\"#16entry键值对对象\">#</a> 1.6Entry 键值对对象</h2>\n<p>我们已经知道， Map 中存放的是两种对象，一种称为<strong> key (键)</strong>，一种称为<strong> value (值)</strong>，它们在在 Map 中是 <code>一一对应关 系</code> ，这一对对象又称做 Map 中的一个  <code>Entry(项)</code>  。 <strong>Entry 将键值对的对应关系封装成了对象。即键值对对象</strong>，这 样我们在遍历 Map 集合时，就可以从每一个键值对（ Entry ）对象中获取对应的键与对应的值。 既然 Entry 表示了一对键和值，那么也同样提供了获取对应键和对应值得方法：</p>\n<ul>\n<li><code>public K getKey()</code>  ：获取 Entry 对象中的键。</li>\n<li><code>public V getValue()</code>  ：获取 Entry 对象中的值。</li>\n</ul>\n<p>在 Map 集合中也提供了获取所有 Entry 对象的方法：</p>\n<ul>\n<li><code>public Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet()</code>  : 获取到 Map 集合中所有的键值对对象的集合 (Set 集合)。</li>\n</ul>\n<h2 id=\"17map集合遍历键值对方式\"><a class=\"markdownIt-Anchor\" href=\"#17map集合遍历键值对方式\">#</a> 1.7Map 集合遍历键值对方式</h2>\n<p>遍历键值对方式：即<strong>通过集合中每个键值对 (Entry) 对象，获取键值对 (Entry) 对象中的键与值</strong>。<br>\n操作步骤：</p>\n<ol>\n<li>获取 Map 集合中，所有的键值对 (Entry) 对象，以 Set 集合形式返回。方法提示: entrySet () 。</li>\n<li>遍历包含键值对 (Entry) 对象的 Set 集合，得到每一个键值对 (Entry) 对象。</li>\n<li>通过键值对 (Entry) 对象，获取 Entry 对象中的键与值。 方法提示: getkey () getValue ()</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map.Entry;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span> </span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"comment\">// 创建Map集合对象 </span></span><br><span class=\"line\">\t\tHashMap&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;String,String&gt;(); </span><br><span class=\"line\">\t\t<span class=\"comment\">// 添加元素到集合 </span></span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;胡歌&quot;</span>, <span class=\"string\">&quot;霍建华&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;郭德纲&quot;</span>, <span class=\"string\">&quot;于谦&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;薛之谦&quot;</span>, <span class=\"string\">&quot;大张伟&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 获取 所有的 entry对象 entrySet </span></span><br><span class=\"line\">\t\tSet&lt;Entry&lt;String,String&gt;&gt; entrySet = map.entrySet(); </span><br><span class=\"line\">\t\t<span class=\"comment\">// 遍历得到每一个entry对象 </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (Entry&lt;String, String&gt; entry : entrySet) </span><br><span class=\"line\">\t\t&#123; </span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 解析 </span></span><br><span class=\"line\">\t\t\tString key = entry.getKey(); </span><br><span class=\"line\">\t\t\tString value = entry.getValue(); </span><br><span class=\"line\">\t\t\tSystem.out.println(key+<span class=\"string\">&quot;的CP是:&quot;</span>+value);</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">郭德纲的CP是:于谦</span><br><span class=\"line\">薛之谦的CP是:大张伟</span><br><span class=\"line\">胡歌的CP是:霍建华</span><br></pre></td></tr></table></figure>\n<p><strong>遍历图解：</strong><br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200912133618347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"18map集合练习\"><a class=\"markdownIt-Anchor\" href=\"#18map集合练习\">#</a> 1.8Map 集合练习</h2>\n<p>题目：计算一个字符串中每个字符出现次数。<br>\n分析：</p>\n<ol>\n<li>获取一个字符串对象</li>\n<li>创建一个 Map 集合，键代表字符，值代表次数。</li>\n<li>遍历字符串得到每个字符。</li>\n<li>判断 Map 中是否有该键。</li>\n<li>如果没有，第一次出现，存储次数为</li>\n<li>打印最终结果</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请录入一个字符串:&quot;</span>);</span><br><span class=\"line\">\t\tScanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\tString s = scanner.next();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 定义 每个字符出现次数的方法 </span></span><br><span class=\"line\">\t\tfindChar(s);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">findChar</span><span class=\"params\">(String line)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"comment\">//1:创建一个集合 存储 字符 以及其出现的次数 </span></span><br><span class=\"line\">\t\tHashMap&lt;Character, Integer&gt; map = <span class=\"keyword\">new</span> HashMap&lt;Character, Integer&gt;(); </span><br><span class=\"line\">\t\t<span class=\"comment\">//2:遍历字符串 </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; line.length(); i++) </span><br><span class=\"line\">\t\t&#123; </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">char</span> c = line.charAt(i); </span><br><span class=\"line\">\t\t\t<span class=\"comment\">//判断 该字符 是否在键集中</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!map.containsKey(c)) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//说明这个字符没有出现过 </span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//那就是第一次 </span></span><br><span class=\"line\">\t\t\t\tmap.put(c, <span class=\"number\">1</span>); </span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//先获取之前的次数 </span></span><br><span class=\"line\">\t\t\t\t\tInteger count = map.get(c); </span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//count++;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//再次存入 更新</span></span><br><span class=\"line\">\t\t\t\t\tmap.put(c, ++count);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(map); &#125;\t\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">请录入一个字符串:</span><br><span class=\"line\">aaabbbbsda</span><br><span class=\"line\">&#123;a=<span class=\"number\">4</span>, b=<span class=\"number\">4</span>, s=<span class=\"number\">1</span>, d=<span class=\"number\">1</span>&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"2-hashmap集合\"><a class=\"markdownIt-Anchor\" href=\"#2-hashmap集合\">#</a> 2、HashMap 集合</h1>\n<h2 id=\"21hashmap介绍\"><a class=\"markdownIt-Anchor\" href=\"#21hashmap介绍\">#</a> 2.1HashMap 介绍</h2>\n<p>HashMap 是基于<strong>哈希表</strong>的 Map 实现的的，<strong>一个 Key 对应一个 Value</strong>，允许使用 null 键和 null 值，元素的<strong>存取顺序不能保证一致</strong>。由于要<font color=red><strong>保证键的唯一、不重复，需要重写键的 hashCode () 方法、equals () 方法</strong></font>。</p>\n<p><font color=blue>不保证映射的顺序，特别是它不保证该顺序恒久不变！也不是同步的</font>：<br>\n（当哈希表中的条目数超出了加载因子与当前容量的乘积时的时候，哈希表进行 rehash 操作（即重建内部数据结构），此时映射顺序可能会被打乱！）</p>\n<h2 id=\"22hashmap的存储结构数组链表红黑树\"><a class=\"markdownIt-Anchor\" href=\"#22hashmap的存储结构数组链表红黑树\">#</a> 2.2HashMap 的存储结构（数组 + 链表 + 红黑树）</h2>\n<p>HashMap 根据<font color=blue><strong>键的 hashCode 值</strong></font>存储数据，大多数情况下可以<strong>直接定位</strong>到它的值，因而<strong>具有很快的访问速度</strong>，但遍历顺序却是不确定的。 HashMap 最多<strong>只允许一条记录的键为 null，允许多条记录的值为 null</strong>。</p>\n<p>HashMap <strong>非线程安全</strong>，即任一时刻可以有多个线程同时写 HashMap，可能会导致数据的不一致。如果需要满足线程安全有以下两种办法 ：</p>\n<ul>\n<li>使用 Collections 的 synchronizedMap 方法使 HashMap 具有线程安全的能力</li>\n<li>使用 ConcurrentHashMap 接口</li>\n</ul>\n<p><strong>Java7 的 HashMap 结构：</strong><br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/2020091212423071.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n大方向上，<strong>HashMap 里面是一个数组，然后数组中每个元素是一个单向链表</strong>。上图中，每个绿色的实体是嵌套类 Entry 的实例，Entry 包含四个属性：key, value, hash 值和用于单向链表的 next。</p>\n<ol>\n<li>capacity：当前数组容量，始终保持 2^n，可以扩容，扩容后数组大小为当前的 2 倍。</li>\n<li>loadFactor：负载因子，默认为 0.75。</li>\n<li>threshold：扩容的阈值，等于 capacity * loadFactor</li>\n</ol>\n<p><strong>Java8 的 HashMap 结构：</strong><br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200912124525563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n Java8 对 HashMap 进行了一些修改，最大的不同就是利用了红黑树，所以其由 <strong>数组 + 链表 + 红黑树</strong> 组成。<br>\n<font color=red>为什么要加入红黑树结构？</font><br>\n根据 Java7 HashMap 的介绍，我们知道，查找的时候，根据 hash 值我们能够快速定位到数组的具体下标，但是之后的话，需要顺着链表一个个比较下去才能找到我们需要的，<strong>时间复杂度取决于链表的长度为 O (n)</strong>。为了降低这部分的开销，在 Java8 中，当链表中的元素超过了 8 个以后，会将链表转换为红黑树，在这些位置进行查找的时候可以降低<strong>时间复杂度为 O (logN</strong>)。</p>\n<h2 id=\"23hashmap的继承关系和api方法\"><a class=\"markdownIt-Anchor\" href=\"#23hashmap的继承关系和api方法\">#</a> 2.3HashMap 的继承关系和 API 方法</h2>\n<p><strong>HashMap 的继承关系：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类 HashMap&lt;K,V&gt;</span><br><span class=\"line\">java.lang.Object</span><br><span class=\"line\">  继承者 java.util.AbstractMap&lt;K,V&gt;</span><br><span class=\"line\">      继承者 java.util.HashMap&lt;K,V&gt;</span><br><span class=\"line\">类型参数：</span><br><span class=\"line\">    K - 此映射所维护的键的类型</span><br><span class=\"line\">    V - 所映射值的类型</span><br><span class=\"line\">所有已实现的接口： </span><br><span class=\"line\">    Serializable, Cloneable, Map&lt;K,V&gt; </span><br></pre></td></tr></table></figure>\n<p><strong>HashMap 的 API:</strong><br>\n（1）构造函数：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HashMap() </span><br><span class=\"line\">          构造一个具有默认初始容量 (<span class=\"number\">16</span>) 和默认加载因子 (<span class=\"number\">0.75</span>) 的空 HashMap。 </span><br><span class=\"line\">HashMap(<span class=\"keyword\">int</span> initialCapacity) </span><br><span class=\"line\">          构造一个带指定初始容量和默认加载因子 (<span class=\"number\">0.75</span>) 的空 HashMap。 </span><br><span class=\"line\">HashMap(<span class=\"keyword\">int</span> initialCapacity, <span class=\"keyword\">float</span> loadFactor) </span><br><span class=\"line\">          构造一个带指定初始容量和加载因子的空 HashMap。 </span><br><span class=\"line\">HashMap(Map&lt;? extends K,? extends V&gt; m) </span><br><span class=\"line\">          构造一个映射关系与指定 Map 相同的新 HashMap。 </span><br></pre></td></tr></table></figure>\n<p>（2）方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         从此映射中移除所有映射关系。 </span></span><br><span class=\"line\"><span class=\"function\">Object <span class=\"title\">clone</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此 HashMap 实例的浅表副本：并不复制键和值本身。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">containsKey</span><span class=\"params\">(Object key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         如果此映射包含对于指定键的映射关系，则返回 <span class=\"keyword\">true</span>。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">containsValue</span><span class=\"params\">(Object value)</span> </span></span><br><span class=\"line\"><span class=\"function\">         如果此映射将一个或多个键映射到指定值，则返回 <span class=\"keyword\">true</span>。 </span></span><br><span class=\"line\"><span class=\"function\">Set&lt;Map.Entry&lt;K,V&gt;&gt; <span class=\"title\">entrySet</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射所包含的映射关系的 Set 视图。 </span></span><br><span class=\"line\"><span class=\"function\">V <span class=\"title\">get</span><span class=\"params\">(Object key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回指定键所映射的值；如果对于该键来说，此映射不包含任何映射关系，则返回 <span class=\"keyword\">null</span>。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         如果此映射不包含键-值映射关系，则返回 <span class=\"keyword\">true</span>。 </span></span><br><span class=\"line\"><span class=\"function\">Set&lt;K&gt; <span class=\"title\">keySet</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射中所包含的键的 Set 视图。 </span></span><br><span class=\"line\"><span class=\"function\">V <span class=\"title\">put</span><span class=\"params\">(K key, V value)</span> </span></span><br><span class=\"line\"><span class=\"function\">         在此映射中关联指定值与指定键。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">putAll</span><span class=\"params\">(Map&lt;? extends K,? extends V&gt; m)</span> </span></span><br><span class=\"line\"><span class=\"function\">         将指定映射的所有映射关系复制到此映射中，这些映射关系将替换此映射目前针对指定映射中所有键的所有映射关系。 </span></span><br><span class=\"line\"><span class=\"function\">V <span class=\"title\">remove</span><span class=\"params\">(Object key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         从此映射中移除指定键的映射关系（如果存在）。 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射中的键-值映射关系数。 </span></span><br><span class=\"line\"><span class=\"function\">Collection&lt;V&gt; <span class=\"title\">values</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射所包含的值的 Collection 视图。 </span></span><br></pre></td></tr></table></figure>\n<h2 id=\"24hashmap存储自定义类型键值\"><a class=\"markdownIt-Anchor\" href=\"#24hashmap存储自定义类型键值\">#</a> 2.4HashMap 存储自定义类型键值</h2>\n<p>练习：每位学生（姓名，年龄）都有自己的家庭住址。那么，既然有对应关系，则将学生对象和家庭住址存储到 map 集合中。学生作为键，家庭住址作为值。<br>\n注意：学生姓名相同并且年龄相同视为同一名学生。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name; </span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> age; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(<span class=\"keyword\">int</span> age)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.age = age; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span> </span><br><span class=\"line\">\t<span class=\"comment\">//重写equals方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object o)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == o) </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>; </span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (o == <span class=\"keyword\">null</span> || getClass() != o.getClass()) </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>; </span><br><span class=\"line\">\t\tStudent student = (Student) o; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> age == student.age &amp;&amp; Objects.equals(name, student.name); </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span> </span><br><span class=\"line\">\t<span class=\"comment\">//重写hashCode方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> Objects.hash(name, age); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span> </span><br><span class=\"line\">\t<span class=\"comment\">//重写toString方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;Studen:&quot;</span> + name +<span class=\"string\">&quot;      &quot;</span>+ <span class=\"string\">&quot;年龄:&quot;</span> +age+<span class=\"string\">&quot;     &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t    <span class=\"comment\">//1,创建Hashmap集合对象。 </span></span><br><span class=\"line\">\t\tMap&lt;Student,String&gt;map = <span class=\"keyword\">new</span> HashMap&lt;Student,String&gt;(); </span><br><span class=\"line\">\t\t<span class=\"comment\">//2,添加元素。 </span></span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">28</span>), <span class=\"string\">&quot;上海&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;李四&quot;</span>,<span class=\"number\">22</span>), <span class=\"string\">&quot;北京&quot;</span>); </span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;王五&quot;</span>,<span class=\"number\">24</span>), <span class=\"string\">&quot;成都&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;谢六&quot;</span>,<span class=\"number\">25</span>), <span class=\"string\">&quot;广州&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;刘强&quot;</span>,<span class=\"number\">22</span>), <span class=\"string\">&quot;南京&quot;</span>); </span><br><span class=\"line\">\t\t<span class=\"comment\">//3,取出元素。键找值方式 </span></span><br><span class=\"line\">\t\tSet&lt;Student&gt;keySet = map.keySet(); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(Student key: keySet)</span><br><span class=\"line\">\t\t&#123; </span><br><span class=\"line\">\t\t\tString value = map.get(key); </span><br><span class=\"line\">\t\t\tSystem.out.println(key.toString()+<span class=\"string\">&quot;来自&quot;</span>+value); </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Studen:李四      年龄:<span class=\"number\">22</span>     来自北京</span><br><span class=\"line\">Studen:谢六      年龄:<span class=\"number\">25</span>     来自广州</span><br><span class=\"line\">Studen:张三      年龄:<span class=\"number\">28</span>     来自上海</span><br><span class=\"line\">Studen:刘强      年龄:<span class=\"number\">22</span>     来自南京</span><br><span class=\"line\">Studen:王五      年龄:<span class=\"number\">24</span>     来自成都</span><br></pre></td></tr></table></figure>\n<ul>\n<li>当给 HashMap 中存放自定义对象时，如果自定义对象<strong>作为 key 存在</strong>，<strong>这时要保证对象唯一</strong>，必须复写对象的 hashCode 和 equals 方法。</li>\n<li>如果要保证 map 中存放的 key 和取出的顺序一致，可以使用  <code>java.util.LinkedHashMap</code>  集合来存放。</li>\n</ul>\n<h2 id=\"25linkedhashmap集合\"><a class=\"markdownIt-Anchor\" href=\"#25linkedhashmap集合\">#</a> 2.5LinkedHashMap 集合</h2>\n<p>我们知道 HashMap 保证成对元素唯一，并且查询速度很快，可是成对元素存放进去是没有顺序的，那么我们要<strong>保证有序，还要速度快</strong>怎么办呢？<br>\n在<strong> HashMap 下面有一个子类</strong>  <code>LinkedHashMap</code> ，它是链表和哈希表组合的一个数据存储结构。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedHashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map.Entry;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t\tLinkedHashMap&lt;String, String&gt; map = <span class=\"keyword\">new</span> LinkedHashMap&lt;String, String&gt;(); </span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;李四&quot;</span>); </span><br><span class=\"line\">\t\tmap.put(<span class=\"string\">&quot;3&quot;</span>, <span class=\"string\">&quot;王五&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//遍历键值对</span></span><br><span class=\"line\">\t\tSet&lt;Entry&lt;String, String&gt;&gt; entrySet = map.entrySet(); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (Entry&lt;String, String&gt; entry : entrySet) </span><br><span class=\"line\">\t\t&#123; </span><br><span class=\"line\">\t\t\tSystem.out.println(entry.getKey() + <span class=\"string\">&quot; &quot;</span> + entry.getValue()); </span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> 张三</span><br><span class=\"line\"><span class=\"number\">2</span> 李四</span><br><span class=\"line\"><span class=\"number\">3</span> 王五</span><br></pre></td></tr></table></figure>\n<h1 id=\"3-treemap集合\"><a class=\"markdownIt-Anchor\" href=\"#3-treemap集合\">#</a> 3、TreeMap 集合</h1>\n<h2 id=\"31treemap介绍\"><a class=\"markdownIt-Anchor\" href=\"#31treemap介绍\">#</a> 3.1TreeMap 介绍</h2>\n<p>TreeMap 是一个<strong>有序的 key-value 集合</strong>，基于<strong>红黑树（Red-Black tree</strong>）的 NavigableMap 实现。该映射根据其键的<strong>自然顺序进行排序</strong>，<strong>或者根据创建映射时提供的 Comparator 进行排序</strong>，具体<strong>取决于使用的构造方法</strong>。</p>\n<h2 id=\"32treemap的继承关系和api\"><a class=\"markdownIt-Anchor\" href=\"#32treemap的继承关系和api\">#</a> 3.2TreeMap 的继承关系和 API</h2>\n<p><strong>TreeMap 的继承关系：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类 TreeMap&lt;K,V&gt;</span><br><span class=\"line\">java.lang.Object</span><br><span class=\"line\">  继承者 java.util.AbstractMap&lt;K,V&gt;</span><br><span class=\"line\">      继承者 java.util.TreeMap&lt;K,V&gt;</span><br><span class=\"line\">类型参数：</span><br><span class=\"line\">K - 此映射维护的键的类型</span><br><span class=\"line\">V - 映射值的类型</span><br></pre></td></tr></table></figure>\n<ul>\n<li>继承 <code>AbstactMap</code>  类，则 TreeMap 是一个 Map，具体 key-value 特性的集合！</li>\n<li>实现了 <code>Navigable</code>  接口，意味着它支持一系列的导航方法，如<strong>有序的 key 返回</strong>。</li>\n<li>实现了 <code>Cloneable</code>  接口，意味着它<strong>能被克隆</strong>。</li>\n<li>实现了 <code>Serializable</code>  接口，意味着它<strong>支持序列化</strong>。</li>\n</ul>\n<p><strong>TreeMap 的 API:</strong><br>\n1：构造方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TreeMap() </span><br><span class=\"line\">          使用键的自然顺序构造一个新的、空的树映射。</span><br><span class=\"line\">TreeMap(Comparator&lt;? <span class=\"keyword\">super</span> K&gt; comparator) </span><br><span class=\"line\">          构造一个新的、空的树映射，该映射根据给定比较器进行排序。</span><br><span class=\"line\">TreeMap(Map&lt;? extends K,? extends V&gt; m) </span><br><span class=\"line\">          构造一个与给定映射具有相同映射关系的新的树映射，该映射根据其键的自然顺序 进行排序。</span><br><span class=\"line\">TreeMap(SortedMap&lt;K,? extends V&gt; m) </span><br><span class=\"line\">          构造一个与指定有序映射具有相同映射关系和相同排序顺序的新的树映射。</span><br></pre></td></tr></table></figure>\n<p>2：常用方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map.<span class=\"function\">Entry&lt;K,V&gt; <span class=\"title\">ceilingEntry</span><span class=\"params\">(K key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回一个键-值映射关系，它与大于等于给定键的最小键关联；如果不存在这样的键，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">K  <span class=\"title\">ceilingKey</span><span class=\"params\">(K key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回大于等于给定键的最小键；如果不存在这样的键，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>   <span class=\"title\">clear</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         从此映射中移除所有映射关系。</span></span><br><span class=\"line\"><span class=\"function\">Object <span class=\"title\">clone</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此 TreeMap 实例的浅表副本。</span></span><br><span class=\"line\"><span class=\"function\">Comparator&lt;? <span class=\"keyword\">super</span> K&gt;  <span class=\"title\">comparator</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回对此映射中的键进行排序的比较器；如果此映射使用键的自然顺序，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span>    <span class=\"title\">containsKey</span><span class=\"params\">(Object key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         如果此映射包含指定键的映射关系，则返回 <span class=\"keyword\">true</span>。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span>    <span class=\"title\">containsValue</span><span class=\"params\">(Object value)</span> </span></span><br><span class=\"line\"><span class=\"function\">         如果此映射为指定值映射一个或多个键，则返回 <span class=\"keyword\">true</span>。</span></span><br><span class=\"line\"><span class=\"function\">NavigableSet&lt;K&gt;    <span class=\"title\">descendingKeySet</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射中所包含键的逆序 NavigableSet 视图。</span></span><br><span class=\"line\"><span class=\"function\">NavigableMap&lt;K,V&gt;  <span class=\"title\">descendingMap</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射中所包含映射关系的逆序视图。</span></span><br><span class=\"line\"><span class=\"function\">Set&lt;Map.Entry&lt;K,V&gt;&gt;    <span class=\"title\">entrySet</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射中包含的映射关系的 Set 视图。</span></span><br><span class=\"line\"><span class=\"function\">Map.Entry&lt;K,V&gt; <span class=\"title\">firstEntry</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回一个与此映射中的最小键关联的键-值映射关系；如果映射为空，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">K  <span class=\"title\">firstKey</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射中当前第一个（最低）键。</span></span><br><span class=\"line\"><span class=\"function\">Map.Entry&lt;K,V&gt; <span class=\"title\">floorEntry</span><span class=\"params\">(K key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回一个键-值映射关系，它与小于等于给定键的最大键关联；如果不存在这样的键，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">K  <span class=\"title\">floorKey</span><span class=\"params\">(K key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回小于等于给定键的最大键；如果不存在这样的键，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">V  <span class=\"title\">get</span><span class=\"params\">(Object key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回指定键所映射的值，如果对于该键而言，此映射不包含任何映射关系，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">SortedMap&lt;K,V&gt; <span class=\"title\">headMap</span><span class=\"params\">(K toKey)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射的部分视图，其键值严格小于 toKey。</span></span><br><span class=\"line\"><span class=\"function\">NavigableMap&lt;K,V&gt;  <span class=\"title\">headMap</span><span class=\"params\">(K toKey, <span class=\"keyword\">boolean</span> inclusive)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射的部分视图，其键小于（或等于，如果 inclusive 为 <span class=\"keyword\">true</span>）toKey。</span></span><br><span class=\"line\"><span class=\"function\">Map.Entry&lt;K,V&gt; <span class=\"title\">higherEntry</span><span class=\"params\">(K key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回一个键-值映射关系，它与严格大于给定键的最小键关联；如果不存在这样的键，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">K  <span class=\"title\">higherKey</span><span class=\"params\">(K key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回严格大于给定键的最小键；如果不存在这样的键，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">Set&lt;K&gt; <span class=\"title\">keySet</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射包含的键的 Set 视图。</span></span><br><span class=\"line\"><span class=\"function\">Map.Entry&lt;K,V&gt; <span class=\"title\">lastEntry</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回与此映射中的最大键关联的键-值映射关系；如果映射为空，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">K  <span class=\"title\">lastKey</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回映射中当前最后一个（最高）键。</span></span><br><span class=\"line\"><span class=\"function\">Map.Entry&lt;K,V&gt; <span class=\"title\">lowerEntry</span><span class=\"params\">(K key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回一个键-值映射关系，它与严格小于给定键的最大键关联；如果不存在这样的键，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">K  <span class=\"title\">lowerKey</span><span class=\"params\">(K key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回严格小于给定键的最大键；如果不存在这样的键，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">NavigableSet&lt;K&gt;    <span class=\"title\">navigableKeySet</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射中所包含键的 NavigableSet 视图。</span></span><br><span class=\"line\"><span class=\"function\">Map.Entry&lt;K,V&gt; <span class=\"title\">pollFirstEntry</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         移除并返回与此映射中的最小键关联的键-值映射关系；如果映射为空，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">Map.Entry&lt;K,V&gt; <span class=\"title\">pollLastEntry</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         移除并返回与此映射中的最大键关联的键-值映射关系；如果映射为空，则返回 <span class=\"keyword\">null</span>。</span></span><br><span class=\"line\"><span class=\"function\">V  <span class=\"title\">put</span><span class=\"params\">(K key, V value)</span> </span></span><br><span class=\"line\"><span class=\"function\">         将指定值与此映射中的指定键进行关联。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>   <span class=\"title\">putAll</span><span class=\"params\">(Map&lt;? extends K,? extends V&gt; map)</span> </span></span><br><span class=\"line\"><span class=\"function\">         将指定映射中的所有映射关系复制到此映射中。</span></span><br><span class=\"line\"><span class=\"function\">V  <span class=\"title\">remove</span><span class=\"params\">(Object key)</span> </span></span><br><span class=\"line\"><span class=\"function\">         如果此 TreeMap 中存在该键的映射关系，则将其删除。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>    <span class=\"title\">size</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射中的键-值映射关系数。</span></span><br><span class=\"line\"><span class=\"function\">NavigableMap&lt;K,V&gt;  <span class=\"title\">subMap</span><span class=\"params\">(K fromKey, <span class=\"keyword\">boolean</span> fromInclusive, K toKey, <span class=\"keyword\">boolean</span> toInclusive)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射的部分视图，其键的范围从 fromKey 到 toKey。</span></span><br><span class=\"line\"><span class=\"function\">SortedMap&lt;K,V&gt; <span class=\"title\">subMap</span><span class=\"params\">(K fromKey, K toKey)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射的部分视图，其键值的范围从 fromKey（包括）到 toKey（不包括）。</span></span><br><span class=\"line\"><span class=\"function\">SortedMap&lt;K,V&gt; <span class=\"title\">tailMap</span><span class=\"params\">(K fromKey)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射的部分视图，其键大于等于 fromKey。</span></span><br><span class=\"line\"><span class=\"function\">NavigableMap&lt;K,V&gt;  <span class=\"title\">tailMap</span><span class=\"params\">(K fromKey, <span class=\"keyword\">boolean</span> inclusive)</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射的部分视图，其键大于（或等于，如果 inclusive 为 <span class=\"keyword\">true</span>）fromKey。</span></span><br><span class=\"line\"><span class=\"function\">Collection&lt;V&gt;  <span class=\"title\">values</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">         返回此映射包含的值的 Collection 视图。</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map.Entry;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeMap;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t\tTreeMap&lt;Integer, String&gt; tmap = <span class=\"keyword\">new</span> TreeMap&lt;&gt;();</span><br><span class=\"line\">\t\ttmap.put(<span class=\"number\">14</span>, <span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">\t\ttmap.put(<span class=\"number\">2</span>, <span class=\"string\">&quot;李四&quot;</span>); </span><br><span class=\"line\">\t\ttmap.put(<span class=\"number\">32</span>, <span class=\"string\">&quot;王五&quot;</span>);</span><br><span class=\"line\">\t\ttmap.put(<span class=\"number\">24</span>, <span class=\"string\">&quot;刘强&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//遍历键值对</span></span><br><span class=\"line\">\t\tSet&lt;Entry&lt;Integer, String&gt;&gt; entrySet = tmap.entrySet(); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (Entry&lt;Integer, String&gt; entry : entrySet) </span><br><span class=\"line\">\t\t&#123; </span><br><span class=\"line\">\t\t\tSystem.out.println(entry.getKey() + <span class=\"string\">&quot; &quot;</span> + entry.getValue()); </span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;size of tmap is: &quot;</span> + tmap.size());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;tmap contains value 张三: &quot;</span> + tmap.containsValue(<span class=\"string\">&quot;张三&quot;</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;tmap contains key 32: &quot;</span> + tmap.containsKey(<span class=\"number\">32</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;last key in tmap is: &quot;</span> + tmap.lastKey());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;key is 14 &amp; value is &quot;</span> + tmap.get(<span class=\"number\">14</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;remove key 14&quot;</span>);</span><br><span class=\"line\">        tmap.remove(<span class=\"number\">14</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;tmap contains key : &quot;</span> + tmap.containsKey(<span class=\"number\">14</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;key in tmap:&quot;</span>);</span><br><span class=\"line\">        Iterator&lt;Integer&gt; iterator = tmap.keySet().iterator();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (iterator.hasNext()) &#123;</span><br><span class=\"line\">            System.out.println(iterator.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;clear tmap&quot;</span>);</span><br><span class=\"line\">        tmap.clear();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;size of tmap: &quot;</span> + tmap.size());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2</span> 李四</span><br><span class=\"line\"><span class=\"number\">14</span> 张三</span><br><span class=\"line\"><span class=\"number\">24</span> 刘强</span><br><span class=\"line\"><span class=\"number\">32</span> 王五</span><br><span class=\"line\">size of tmap is: <span class=\"number\">4</span></span><br><span class=\"line\">tmap contains value 张三: <span class=\"keyword\">true</span></span><br><span class=\"line\">tmap contains key <span class=\"number\">32</span>: <span class=\"keyword\">true</span></span><br><span class=\"line\">last key in tmap is: <span class=\"number\">32</span></span><br><span class=\"line\">key is <span class=\"number\">14</span> &amp; value is 张三</span><br><span class=\"line\">remove key <span class=\"number\">14</span></span><br><span class=\"line\">tmap contains key : <span class=\"keyword\">false</span></span><br><span class=\"line\">key in tmap:</span><br><span class=\"line\"><span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"number\">32</span></span><br><span class=\"line\">clear tmap</span><br><span class=\"line\">size of tmap: <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<p>3.3TreeMap 和比较器<br>\n<a href=\"https://blog.csdn.net/weixin_44279178/article/details/108511537\"> Java 比较器</a><br>\n<strong> TreeMap 和内部比较器：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhukun;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeMap;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name; </span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> age; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(<span class=\"keyword\">int</span> age)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.age = age; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span> </span><br><span class=\"line\">\t<span class=\"comment\">//重写equals方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object o)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == o) </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>; </span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (o == <span class=\"keyword\">null</span> || getClass() != o.getClass()) </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>; </span><br><span class=\"line\">\t\tStudent student = (Student) o; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> age == student.age &amp;&amp; Objects.equals(name, student.name); </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span> </span><br><span class=\"line\">\t<span class=\"comment\">//重写hashCode方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> Objects.hash(name, age); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//内部重写比较器</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Object o)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tStudent stu =((Student)o);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.age-stu.age;  <span class=\"comment\">//按照年龄升序排序</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span> </span><br><span class=\"line\">\t<span class=\"comment\">//重写toString方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;Studen:&quot;</span> + name +<span class=\"string\">&quot;      &quot;</span>+ <span class=\"string\">&quot;年龄:&quot;</span> +age+<span class=\"string\">&quot;     &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t\tMap&lt;Student,String&gt; map = <span class=\"keyword\">new</span> TreeMap&lt;&gt;(); </span><br><span class=\"line\">\t\t<span class=\"comment\">//2,添加元素。 </span></span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">28</span>), <span class=\"string\">&quot;上海&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;李四&quot;</span>,<span class=\"number\">22</span>), <span class=\"string\">&quot;北京&quot;</span>); </span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;王五&quot;</span>,<span class=\"number\">24</span>), <span class=\"string\">&quot;成都&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;谢六&quot;</span>,<span class=\"number\">25</span>), <span class=\"string\">&quot;广州&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;刘强&quot;</span>,<span class=\"number\">23</span>), <span class=\"string\">&quot;南京&quot;</span>); </span><br><span class=\"line\">\t\t<span class=\"comment\">//3,取出元素。键找值方式 </span></span><br><span class=\"line\">\t\tSet&lt;Student&gt;keySet = map.keySet(); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(Student key: keySet)</span><br><span class=\"line\">\t\t&#123; </span><br><span class=\"line\">\t\t\tString value = map.get(key); </span><br><span class=\"line\">\t\t\tSystem.out.println(key.toString()+<span class=\"string\">&quot;来自&quot;</span>+value); </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Studen:李四      年龄:<span class=\"number\">22</span>     来自北京</span><br><span class=\"line\">Studen:刘强      年龄:<span class=\"number\">23</span>     来自南京</span><br><span class=\"line\">Studen:王五      年龄:<span class=\"number\">24</span>     来自成都</span><br><span class=\"line\">Studen:谢六      年龄:<span class=\"number\">25</span>     来自广州</span><br><span class=\"line\">Studen:张三      年龄:<span class=\"number\">28</span>     来自上海</span><br></pre></td></tr></table></figure>\n<p><strong>TreeMap 和外部比较器：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeMap;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name; </span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> age; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(<span class=\"keyword\">int</span> age)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.age = age; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span> </span><br><span class=\"line\">\t<span class=\"comment\">//重写equals方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object o)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == o) </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>; </span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (o == <span class=\"keyword\">null</span> || getClass() != o.getClass()) </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>; </span><br><span class=\"line\">\t\tStudent student = (Student) o; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> age == student.age &amp;&amp; Objects.equals(name, student.name); </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span> </span><br><span class=\"line\">\t<span class=\"comment\">//重写hashCode方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> Objects.hash(name, age); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span> </span><br><span class=\"line\">\t<span class=\"comment\">//重写toString方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;Studen:&quot;</span> + name +<span class=\"string\">&quot;      &quot;</span>+ <span class=\"string\">&quot;年龄:&quot;</span> +age+<span class=\"string\">&quot;     &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"comment\">//外部比较器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OutsideCompare</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparator</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Object o1, Object o2)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tStudent st1 = ((Student) o1);</span><br><span class=\"line\">\t\tStudent st2 = ((Student) o2);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> st1.getAge()-st2.getAge();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t\tOutsideCompare com = <span class=\"keyword\">new</span> OutsideCompare();</span><br><span class=\"line\">\t\tMap&lt;Student,String&gt; map = <span class=\"keyword\">new</span> TreeMap&lt;&gt;(com); </span><br><span class=\"line\">\t\t<span class=\"comment\">//2,添加元素。 </span></span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">28</span>), <span class=\"string\">&quot;上海&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;李四&quot;</span>,<span class=\"number\">22</span>), <span class=\"string\">&quot;北京&quot;</span>); </span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;王五&quot;</span>,<span class=\"number\">24</span>), <span class=\"string\">&quot;成都&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;谢六&quot;</span>,<span class=\"number\">25</span>), <span class=\"string\">&quot;广州&quot;</span>);</span><br><span class=\"line\">\t\tmap.put(<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;刘强&quot;</span>,<span class=\"number\">23</span>), <span class=\"string\">&quot;南京&quot;</span>); </span><br><span class=\"line\">\t\t<span class=\"comment\">//3,取出元素。键找值方式 </span></span><br><span class=\"line\">\t\tSet&lt;Student&gt;keySet = map.keySet(); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(Student key: keySet)</span><br><span class=\"line\">\t\t&#123; </span><br><span class=\"line\">\t\t\tString value = map.get(key); </span><br><span class=\"line\">\t\t\tSystem.out.println(key.toString()+<span class=\"string\">&quot;来自&quot;</span>+value); </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Studen:李四      年龄:<span class=\"number\">22</span>     来自北京</span><br><span class=\"line\">Studen:刘强      年龄:<span class=\"number\">23</span>     来自南京</span><br><span class=\"line\">Studen:王五      年龄:<span class=\"number\">24</span>     来自成都</span><br><span class=\"line\">Studen:谢六      年龄:<span class=\"number\">25</span>     来自广州</span><br><span class=\"line\">Studen:张三      年龄:<span class=\"number\">28</span>     来自上海</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Map集合",
                "HashMap",
                "LinkedHashMap",
                "TreeMap"
            ]
        }
    ]
}