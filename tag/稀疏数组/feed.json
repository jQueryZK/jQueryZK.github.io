{
    "version": "https://jsonfeed.org/version/1",
    "title": "jQueryZK Blog • All posts by \"稀疏数组\" tag",
    "description": "过去无法挽回，未来可以改变",
    "home_page_url": "https://jQueryZK.github.io",
    "items": [
        {
            "id": "https://jqueryzk.github.io/2020/08/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89-%20%E7%A8%80%E7%96%8Fsparsearray%E6%95%B0%E7%BB%84/",
            "url": "https://jqueryzk.github.io/2020/08/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%88Java%E5%AE%9E%E7%8E%B0%EF%BC%89-%20%E7%A8%80%E7%96%8Fsparsearray%E6%95%B0%E7%BB%84/",
            "title": "数据结构（Java实现）- 稀疏sparsearray数组",
            "date_published": "2020-08-24T13:07:09.607Z",
            "content_html": "<h1 id=\"1-先看一个实际的需求\"><a class=\"markdownIt-Anchor\" href=\"#1-先看一个实际的需求\">#</a> 1、先看一个实际的需求</h1>\n<p>在编写的五子棋程序中，有存盘退出和续上盘的功能。<br>\n这时候就要求我们要使用二维数组来记录棋盘，如下图所示：<br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200809170541675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n在上图的二维数组中用 1 表示黑棋，用 2 表示蓝棋</p>\n<p><strong>分析问题：</strong> 我们可以发现该二维数组的很多值是默认值 0，因此记录了很多没有意义的数据。这时候就需要用稀疏数组对这个二维数组进行压缩。</p>\n<h1 id=\"2-基本介绍\"><a class=\"markdownIt-Anchor\" href=\"#2-基本介绍\">#</a> 2、基本介绍</h1>\n<p>当一个数组中大部分元素为０，或者为同一个值的数组时，可以使用稀疏数组来保存该数组。<br>\n<strong>稀疏数组的处理方法是:</strong></p>\n<ol>\n<li>记录数组一共有几行几列，有多少个不同的值</li>\n<li>把具有不同值的元素的行列及值记录在一个小规模的数组中，从而缩小程序的规模而得到的<strong>这个小规模的数组就是稀疏数组</strong></li>\n</ol>\n<p>举例如下：<br>\n<strong>一个原始二维数组：</strong><br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200809172309748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n<strong>转换为稀疏数组后：</strong><br>\n<img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200809172320881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n<strong>分析一下稀疏数组的数据特征：</strong><br>\n首先这个稀疏数组是  ： 9x3 （9 行 3 列）的二维数组 <strong>（稀疏数组都是 3 列，也就是 l 里面数据的列序号下标的最大值为 3-1=2）</strong><br>\n第一行数据 6   7   8 ：表示原二维数组一共 6 行 、7 列、8 个不同数值<br>\n第二行数据 0   3   22：0 和 3 分别表示，数值 22 在原二维数组中的行序号下标和列序号下标（表示在原二维数组的 0+1 行 3+1 列）<br>\n（后面各行的数据特征和第二行的一样）<br>\n原始二维数组：6x7=42  <strong>转换</strong>    稀疏数组：9x3=27<br>\n 可以看出稀疏数组起到了一个把原始二维数组规模变小的作用</p>\n<h1 id=\"3-实现\"><a class=\"markdownIt-Anchor\" href=\"#3-实现\">#</a> 3、实现</h1>\n<h2 id=\"31二维数组转稀疏数组\"><a class=\"markdownIt-Anchor\" href=\"#31二维数组转稀疏数组\">#</a> 3.1 二维数组转稀疏数组</h2>\n<p><img src= \"/img/loading.gif\" data-lazy-src=\"https://img-blog.csdnimg.cn/20200809180304145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDI3OTE3OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n<strong>思路：</strong></p>\n<ol>\n<li>遍历原始二维数组，得到有效数据的个数 sum</li>\n<li>根据 sum 就可以创建稀疏数组 sparseArr int [sum+1][3]</li>\n<li>将二维数组的有效数据存入到稀疏数组中</li>\n</ol>\n<h2 id=\"32稀疏数组转二维数组\"><a class=\"markdownIt-Anchor\" href=\"#32稀疏数组转二维数组\">#</a> 3.2 稀疏数组转二维数组</h2>\n<p><strong>思路：</strong><br>\n先读取稀疏数组的第一行，根据第一行的数据，创建原始二维数组，比如上面棋盘中的 chessArr = int [11][11]<br>\n 然后读取稀疏数组的后几行的数据，并赋值给创建好的原始二维数组即可</p>\n<h1 id=\"4-代码实现\"><a class=\"markdownIt-Anchor\" href=\"#4-代码实现\">#</a> 4、代码实现：</h1>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhukun.SparseArray;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Desktop;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStreamWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SparseArray</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//先创建一个二维数组 11*11</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//0:表示没有棋子，1表示黑子  2表示蓝子</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> chessArr1[][] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">11</span>][<span class=\"number\">11</span>];</span><br><span class=\"line\">\t\tchessArr1[<span class=\"number\">1</span>][<span class=\"number\">2</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tchessArr1[<span class=\"number\">2</span>][<span class=\"number\">3</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出原始二维数组</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;输出原始二维数组&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] row: chessArr1)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> data: row)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.print(data+<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.println();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//原始二维数组转稀疏数组</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//1、先遍历原始二维数组，得到有效数据的个数sum</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] row:chessArr1) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> data:row) &#123;</span><br><span class=\"line\">\t\t\t\tsum=data!=<span class=\"number\">0</span>?sum+<span class=\"number\">1</span>:sum;  <span class=\"comment\">//三元运算符判断 如果不为0则sum+1</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;有效数据个数：&quot;</span>+sum);  <span class=\"comment\">//输出不为零的个数</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//2、根据sum就可以创建稀疏数组 sparseArr int[sum+1][3]</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> sparseArr[][]=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[sum+<span class=\"number\">1</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\tsparseArr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=chessArr1.length;   <span class=\"comment\">//原二维数组的行数</span></span><br><span class=\"line\">\t\tsparseArr[<span class=\"number\">0</span>][<span class=\"number\">1</span>]=chessArr1[<span class=\"number\">0</span>].length;  <span class=\"comment\">//原二维数组的列数</span></span><br><span class=\"line\">\t\tsparseArr[<span class=\"number\">0</span>][<span class=\"number\">2</span>]=sum;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//遍历二维数组，将不为0的数放入稀疏数组中</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> count=<span class=\"number\">0</span>;     <span class=\"comment\">//用于记录第几个非零数据    </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;chessArr1.length;i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;chessArr1.length;j++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(chessArr1[i][j]!=<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tcount++;</span><br><span class=\"line\">\t\t\t\t\tsparseArr[count][<span class=\"number\">0</span>]=i;</span><br><span class=\"line\">\t\t\t\t\tsparseArr[count][<span class=\"number\">1</span>]=j;</span><br><span class=\"line\">\t\t\t\t\tsparseArr[count][<span class=\"number\">2</span>]=chessArr1[i][j];</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//打印稀疏数组</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;稀疏数组为:&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] row:sparseArr) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> data:row) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.print(data+<span class=\"string\">&quot;   &quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.println();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//稀疏数组还原成原二维数组</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//1、先根据稀疏数组第一行的数据，创建原始二维数组</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> chessArr2[][]=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[sparseArr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]][sparseArr[<span class=\"number\">0</span>][<span class=\"number\">1</span>]];</span><br><span class=\"line\">\t\t<span class=\"comment\">//2、再读取稀疏数组的数据，将其赋值给二维数组</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;sparseArr.length;i++) &#123;</span><br><span class=\"line\">\t\t\t\tchessArr2[sparseArr[i][<span class=\"number\">0</span>]][sparseArr[i][<span class=\"number\">1</span>]]=sparseArr[i][<span class=\"number\">2</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//打印还原后的二维数组</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;还原后的二维数组为:&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] row:chessArr2) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> data:row) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.print(data+<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.println();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//将稀疏数组保存到硬盘上</span></span><br><span class=\"line\">\t\tFile file = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;C:\\\\Users\\\\zhukun\\\\Desktop\\\\app\\\\map.txt&quot;</span>);</span><br><span class=\"line\">\t\tFileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(file);</span><br><span class=\"line\">\t\tOutputStreamWriter write = <span class=\"keyword\">new</span> OutputStreamWriter(fos, <span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 输出稀疏数组的形式</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;得到的稀疏数组为&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sparseArr.length; i++) </span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.printf(<span class=\"string\">&quot;%d\\t%d\\t%d\\t\\n&quot;</span>, sparseArr[i][<span class=\"number\">0</span>], sparseArr[i][<span class=\"number\">1</span>], sparseArr[i][<span class=\"number\">2</span>]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (i == sparseArr.length - <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\twrite.append(sparseArr[i][<span class=\"number\">0</span>] + <span class=\"string\">&quot;,&quot;</span> + sparseArr[i][<span class=\"number\">1</span>] + <span class=\"string\">&quot;,&quot;</span> + sparseArr[i][<span class=\"number\">2</span>]);</span><br><span class=\"line\">\t\t\t&#125; </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\twrite.append(sparseArr[i][<span class=\"number\">0</span>] + <span class=\"string\">&quot;,&quot;</span> + sparseArr[i][<span class=\"number\">1</span>] + <span class=\"string\">&quot;,&quot;</span> + sparseArr[i][<span class=\"number\">2</span>] + <span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;写入文件中...&quot;</span>);</span><br><span class=\"line\">\t\twrite.close();</span><br><span class=\"line\">\t\tfos.close();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;打开文件中...&quot;</span>);</span><br><span class=\"line\">\t\tDesktop.getDesktop().open(file);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;------------------------------先读取_map.txt&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 创建 FileReader 对象</span></span><br><span class=\"line\">\t\tFileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(file);</span><br><span class=\"line\">\t\tInputStreamReader reader = <span class=\"keyword\">new</span> InputStreamReader(fis, <span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">\t\tStringBuffer sb = <span class=\"keyword\">new</span> StringBuffer();</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (reader.ready())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tsb.append((<span class=\"keyword\">char</span>) reader.read());<span class=\"comment\">// 转成char加到StringBuffer对象中</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(sb.toString());</span><br><span class=\"line\">\t\treader.close();<span class=\"comment\">// 关闭读取流</span></span><br><span class=\"line\">\t\tfis.close();<span class=\"comment\">// 关闭输入流,释放系统资源</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;------------------------------恢复成稀疏数组_sparseArrHf&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 1.创建对应的稀疏数组</span></span><br><span class=\"line\">\t\tString[] str = sb.toString().split(<span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> sparseArrHf[][] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[str.length / <span class=\"number\">3</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t<span class=\"comment\">// 2.给稀疏数组赋值</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (String s : str) &#123;</span><br><span class=\"line\">\t\t\tsparseArrHf[i/<span class=\"number\">3</span>][i % <span class=\"number\">3</span>]=Integer.parseInt(s);</span><br><span class=\"line\">\t\t\ti++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;------------------------------再恢复成二维数组_chessArr22&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将稀疏数组 --&gt;恢复成 原始的二维数组</span></span><br><span class=\"line\">\t\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 1. 读取稀疏数组的第一行,根据第一行的数据,创建原始的二维数组,比如上面的 chessArr2 = int[11][11];</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * </span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 2. 在读取稀疏数组后几行的数据,并赋给 原始的二维数组 即可.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 1. 读取稀疏数组的第一行,根据第一行的数据,创建原始的二维数组</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> chessArr22[][] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[sparseArrHf[<span class=\"number\">0</span>][<span class=\"number\">0</span>]][sparseArrHf[<span class=\"number\">0</span>][<span class=\"number\">1</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 2. 在读取稀疏数组后几行的数据,并赋给 原始的二维数组 即可.</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i3 = <span class=\"number\">1</span>; i3 &lt; sparseArrHf.length; i3++) &#123;</span><br><span class=\"line\">\t\t\tchessArr22[sparseArrHf[i3][<span class=\"number\">0</span>]][sparseArrHf[i3][<span class=\"number\">1</span>]] = sparseArrHf[i3][<span class=\"number\">2</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 输出恢复的二维数组</span></span><br><span class=\"line\">\t\tSystem.out.println();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span>[] row : chessArr22) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> data : row) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.printf(<span class=\"string\">&quot;%d\\t&quot;</span>, data);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.println();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;--------------------------------------------------------恢复完成&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "数组",
                "数据结构",
                "sparsearray",
                "稀疏数组"
            ]
        }
    ]
}