{
    "version": "https://jsonfeed.org/version/1",
    "title": "jQueryZK Blog • All posts by \"random类\" tag",
    "description": "过去无法挽回，未来可以改变",
    "home_page_url": "http://yoursite.com",
    "items": [
        {
            "id": "http://yoursite.com/2020/08/30/Java%E5%AD%A6%E4%B9%A0-Random%E7%B1%BB%E5%92%8CMath%E7%B1%BB/",
            "url": "http://yoursite.com/2020/08/30/Java%E5%AD%A6%E4%B9%A0-Random%E7%B1%BB%E5%92%8CMath%E7%B1%BB/",
            "title": "Java学习-Random类和Math类",
            "date_published": "2020-08-30T12:42:34.844Z",
            "content_html": "<h1 id=\"random类\"><a class=\"markdownIt-Anchor\" href=\"#random类\">#</a> Random 类</h1>\n<h2 id=\"1-什么是random类\"><a class=\"markdownIt-Anchor\" href=\"#1-什么是random类\">#</a> 1 、什么是 Random 类</h2>\n<p>此类的实例用于生成伪随机数<br>\n Random 类中实现的随机算法是<strong>伪随机</strong>，也就是<strong>有规则</strong>的随机。在进行随机时，随机算法的起源数字称为<strong>种子数 (seed)</strong>，在种子数的基础上进行一定的变换，从而产生需要的随机数字。相同种子数的 Random 对象，<strong>相同次数生成的随机数字是完全相同的</strong>。也就是说，<font color=red><strong>两个种子数相同的 Random 对象，第一次生成的随机数字完全相同，第 N 次生成的随机数字也完全相同</strong></font>。这点在生成多个随机数字时需要特别注意。</p>\n<p>（注意：<strong>种子数只是随机算法的起源数字，和生成的随机数字的区间无关</strong>）</p>\n<h2 id=\"2-random类的使用步骤\"><a class=\"markdownIt-Anchor\" href=\"#2-random类的使用步骤\">#</a> 2、Random 类的使用步骤</h2>\n<p><strong>查看类：</strong></p>\n<ul>\n<li><code>java.util.Random</code>  ：该类需要 import 导入使后使用。</li>\n</ul>\n<p><strong>查看构造方法</strong></p>\n<ul>\n<li><code>public Random()</code>  ：创建一个新的随机数生成器。</li>\n<li><code>public Random(long seed)</code> ：该构造方法可以通过制定一个种子数进行创建。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Random r = <span class=\"keyword\">new</span> Random();</span><br><span class=\"line\">Random r1 = <span class=\"keyword\">new</span> Random(<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n<p><strong>查看成员方法</strong><br>\n Random 类中的方法比较简单，每个方法的功能也很容易理解。需要说明的是，Random 类中各方法生成的随机数字都是均匀分布的，也就是说区间内部的数字生成的几率是均等的</p>\n<ul>\n<li>\n<p><code>public int nextInt()</code>  ：返回一个伪随机数，范围在 0 （包括）和 指定值 n （不包括）之间的 int 值。</p>\n</li>\n<li>\n<p><code>public boolean nextBoolean()</code> ：该方法的作用是生成一个随机的 boolean 值，生成 true 和 false 的值几率相等，也就是都是 50% 的几率。</p>\n</li>\n<li>\n<p><code>public double nextDouble()</code> ：该方法的作用是生成一个随机的 double 值，数值介于 [0,1.0) 之间。</p>\n</li>\n<li>\n<p><code>public int nextInt()</code> ：该方法的作用是生成一个随机的 int 值，该值介于 int 的区间，也就是 - 2^31 到 2^31-1 之间。</p>\n</li>\n<li>\n<p><code>public int nextInt(int n)</code> ：生成指定区间的 int 值，该方法的作用是生成一个随机的 int 值，该值介于 [0,n) 的区间，也就是<strong> 0 到 n 之间的随机 int 值，包含 0 而不包含 n</strong>。</p>\n</li>\n<li>\n<p><code>public void setSeed(long seed)</code> ：该方法的作用是重新设置 Random 对象中的种子数。设置完种子数以后的 Random 对象和相同种子数使用 new 关键字创建出的 Random 对象相同。</p>\n</li>\n</ul>\n<h2 id=\"3-具体应用\"><a class=\"markdownIt-Anchor\" href=\"#3-具体应用\">#</a> 3、具体应用</h2>\n<p>使用 Random 类，完成生成 3 个 10 以内的随机整数的操作</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random; </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span> </span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123; </span><br><span class=\"line\">\t\t<span class=\"comment\">//2. 创建键盘录入数据的对象 </span></span><br><span class=\"line\">\t\tRandom r = <span class=\"keyword\">new</span> Random(); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++)&#123; </span><br><span class=\"line\">\t\t\t<span class=\"comment\">//3. 随机生成一个数据</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> number = r.nextInt(<span class=\"number\">10</span>); </span><br><span class=\"line\">\t\t\t<span class=\"comment\">//4. 输出数据 </span></span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;number:&quot;</span>+ number); </span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; \t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>获取 1-n 之间的随机数，<strong>包含 n</strong>，代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 导包 </span></span><br><span class=\"line\"> <span class=\"keyword\">import</span> java.util.Random; </span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span> </span>&#123; </span><br><span class=\"line\">\t <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t <span class=\"keyword\">int</span> n = <span class=\"number\">50</span>; </span><br><span class=\"line\">\t\t <span class=\"comment\">// 创建对象 </span></span><br><span class=\"line\">\t\t Random r = <span class=\"keyword\">new</span> Random(); </span><br><span class=\"line\">\t\t <span class=\"comment\">// 获取随机数 </span></span><br><span class=\"line\">\t\t <span class=\"keyword\">int</span> number = r.nextInt(n) + <span class=\"number\">1</span>; </span><br><span class=\"line\">\t\t <span class=\"comment\">// 输出随机数 </span></span><br><span class=\"line\">\t\t System.out.println(<span class=\"string\">&quot;number:&quot;</span> + number); </span><br><span class=\"line\">\t\t &#125; </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>猜数字游戏：</strong> 游戏开始时，会随机生成一个 1-100 之间的整数 number 。玩家猜测一个数字 guessNumber ，会与 number 作比 较，系统提示大了或者小了，直到玩家猜中，游戏结束。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner; </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 系统产生一个随机数1‐100之间的。 </span></span><br><span class=\"line\">\t\tRandom r = <span class=\"keyword\">new</span> Random(); </span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> number = r.nextInt(<span class=\"number\">100</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123; </span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 键盘录入我们要猜的数据 </span></span><br><span class=\"line\">\t\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in); </span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;请输入你要猜的数字(1‐100)：&quot;</span>); </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> guessNumber = sc.nextInt(); </span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 比较这两个数据(用if语句) </span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (guessNumber &gt; number) </span><br><span class=\"line\">\t\t\t&#123; </span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;你猜的数据&quot;</span> + guessNumber + <span class=\"string\">&quot;大了&quot;</span>); </span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (guessNumber &lt; number) </span><br><span class=\"line\">\t\t\t&#123; System.out.println(<span class=\"string\">&quot;你猜的数据&quot;</span> + guessNumber + <span class=\"string\">&quot;小了&quot;</span>); </span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> </span><br><span class=\"line\">\t\t\t&#123; </span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;恭喜你,猜中了&quot;</span>); </span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>; </span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"math类\"><a class=\"markdownIt-Anchor\" href=\"#math类\">#</a> Math 类</h1>\n<h2 id=\"1-概述\"><a class=\"markdownIt-Anchor\" href=\"#1-概述\">#</a> 1、概述</h2>\n<p><code>java.lang.Math</code>  类包含用于<strong>执行基本数学运算</strong>的方法，如初等指数、对数、平方根和三角函数。类似这样的工具 类，其<strong>所有方法均为静态方法</strong>，并且<strong>不会创建对象</strong>，调用起来非常简单。</p>\n<h2 id=\"2-常用运算方法\"><a class=\"markdownIt-Anchor\" href=\"#2-常用运算方法\">#</a> 2、常用运算方法</h2>\n<ul>\n<li><code>Math.sqrt()</code> ：计算平方根</li>\n<li><code>Math.cbrt()</code> ：计算立方根</li>\n<li><code>Math.hypot(x,y)</code> ：计算 (x 的平方 + y 的平方)<strong> 的平方根</strong></li>\n<li><code>Math.pow(a,b)</code> ：计算 a 的 b 次方</li>\n<li><code>Math.exp(x)</code> ：计算 e^x 的值</li>\n<li><code>Math.max()</code> ：计算最大值 Math.min ();// 计算最小值</li>\n<li><code>Math.abs()</code> ：返回 double 值的绝对值。</li>\n<li><code>Math.ceil()</code> ：天花板的意思，返回大于等于参数的最小的整数</li>\n<li><code>Math.floor()</code> ：地板的意思，返回小于等于参数最大的整数</li>\n<li><code>Math.random()</code> ： 取得一个大于或者等于 0.0 小于不等于 1.0 的随机数 [0,1)</li>\n<li><code>Math.rint()</code> ： 四舍五入 返回 double 值</li>\n<li><code>Math.round()</code> ： 四舍五入 float 时返回 int 值，double 时返回 long 值</li>\n<li><code>Math.nextUp(a)</code> ： 返回比 a 大一点点的浮点数</li>\n<li><code>Math.nextDown(a)</code> ： 返回比 a 小一点点的浮点数</li>\n<li><code>Math.nextAfter(a,b)</code> ：返回 (a,b) 或 (b,a) 间与 a 相邻的浮点数 b 可以比 a 小</li>\n</ul>\n",
            "tags": [
                "java",
                "类",
                "Random类",
                "Math类"
            ]
        }
    ]
}